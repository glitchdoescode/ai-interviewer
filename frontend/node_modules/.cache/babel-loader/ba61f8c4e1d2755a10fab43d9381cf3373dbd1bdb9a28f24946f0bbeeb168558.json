{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Button,Text,Heading,VStack,HStack,Badge,Divider,useToast,Alert,AlertIcon,Tabs,TabList,TabPanels,Tab,TabPanel,Accordion,AccordionItem,AccordionButton,AccordionPanel,AccordionIcon}from'@chakra-ui/react';import{FaPlay,FaCheck,FaTimes,FaPauseCircle,FaCode}from'react-icons/fa';import CodeEditor from'./CodeEditor';import{useInterview}from'../context/InterviewContext';import{submitChallengeCode}from'../api/interviewService';/**\n * CodingChallenge component for handling coding challenge interactions\n * \n * @param {Object} props Component props\n * @param {Object} props.challenge Challenge data (title, description, etc.)\n * @param {Function} props.onComplete Callback when challenge is completed\n * @param {Function} props.onRequestHint Callback to request a hint\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CodingChallenge=_ref=>{var _testResults$test_cas;let{challenge,onComplete,onRequestHint}=_ref;const[code,setCode]=useState((challenge===null||challenge===void 0?void 0:challenge.starter_code)||'');const[isSubmitting,setIsSubmitting]=useState(false);const[testResults,setTestResults]=useState(null);const[feedback,setFeedback]=useState(null);const[isWaitingForUser,setIsWaitingForUser]=useState(true);const toast=useToast();const{setInterviewStage}=useInterview();// Set the interview stage to coding challenge\nuseEffect(()=>{setInterviewStage('coding_challenge');},[setInterviewStage]);// Run test cases locally for immediate feedback\nconst runTests=async()=>{// For now, just inform the user this is a local test\ntoast({title:'Running Tests',description:'Tests are running locally. This does not submit your solution.',status:'info',duration:3000,isClosable:true});// This would be expanded to actually run tests in the future\n};// Submit the solution to the AI for evaluation\nconst handleSubmit=async()=>{if(!code.trim()){toast({title:'Empty Solution',description:'Please write some code before submitting.',status:'warning',duration:3000,isClosable:true});return;}try{var _result$evaluation,_result$evaluation2,_result$evaluation3,_result$evaluation4;setIsSubmitting(true);// Submit the code to the API\nconst result=await submitChallengeCode(challenge.challenge_id,code);setTestResults(result.execution_results);setFeedback(result.feedback);// If the challenge is passed, call the onComplete callback\nif((_result$evaluation=result.evaluation)!==null&&_result$evaluation!==void 0&&_result$evaluation.passed){onComplete&&onComplete(result);}// Show toast notification with result\ntoast({title:(_result$evaluation2=result.evaluation)!==null&&_result$evaluation2!==void 0&&_result$evaluation2.passed?'Challenge Passed!':'Submission Received',description:(_result$evaluation3=result.evaluation)!==null&&_result$evaluation3!==void 0&&_result$evaluation3.passed?'Great job! Your solution passed all test cases.':'Your solution has been evaluated. Check the feedback for details.',status:(_result$evaluation4=result.evaluation)!==null&&_result$evaluation4!==void 0&&_result$evaluation4.passed?'success':'info',duration:5000,isClosable:true});}catch(error){console.error('Error submitting code:',error);toast({title:'Submission Error',description:'There was an error submitting your code. Please try again.',status:'error',duration:5000,isClosable:true});}finally{setIsSubmitting(false);}};// Request a hint from the AI\nconst handleRequestHint=()=>{onRequestHint&&onRequestHint(code);};// Toggle between AI and user mode\nconst toggleWaitingState=()=>{setIsWaitingForUser(!isWaitingForUser);toast({title:isWaitingForUser?'Resuming Interview':'Paused for Coding',description:isWaitingForUser?'Returning control to the AI interviewer.':'Take your time to solve the challenge. The AI will wait.',status:'info',duration:3000,isClosable:true});};// If no challenge is provided, show a placeholder\nif(!challenge){return/*#__PURE__*/_jsx(Box,{p:4,borderRadius:\"md\",borderWidth:\"1px\",children:/*#__PURE__*/_jsxs(Alert,{status:\"warning\",children:[/*#__PURE__*/_jsx(AlertIcon,{}),\"No coding challenge data available.\"]})});}return/*#__PURE__*/_jsxs(Box,{borderWidth:\"1px\",borderRadius:\"lg\",overflow:\"hidden\",bg:\"white\",boxShadow:\"md\",children:[/*#__PURE__*/_jsxs(Box,{bg:\"brand.50\",p:4,borderBottomWidth:\"1px\",children:[/*#__PURE__*/_jsxs(HStack,{justifyContent:\"space-between\",mb:2,children:[/*#__PURE__*/_jsx(Heading,{size:\"md\",children:challenge.title}),/*#__PURE__*/_jsxs(HStack,{children:[/*#__PURE__*/_jsx(Badge,{colorScheme:challenge.difficulty==='easy'?'green':challenge.difficulty==='medium'?'orange':'red',children:challenge.difficulty.toUpperCase()}),/*#__PURE__*/_jsx(Badge,{colorScheme:\"blue\",children:challenge.language}),/*#__PURE__*/_jsxs(Badge,{colorScheme:\"purple\",children:[challenge.time_limit_mins,\" min\"]})]})]}),/*#__PURE__*/_jsxs(Alert,{status:isWaitingForUser?'success':'warning',mb:2,size:\"sm\",children:[/*#__PURE__*/_jsx(AlertIcon,{}),isWaitingForUser?'The AI is waiting for you to solve this challenge.':'The AI is currently engaged. Click \"Pause for Coding\" to take your time.']}),/*#__PURE__*/_jsx(Button,{size:\"sm\",colorScheme:isWaitingForUser?'blue':'orange',leftIcon:isWaitingForUser?/*#__PURE__*/_jsx(FaPlay,{}):/*#__PURE__*/_jsx(FaPauseCircle,{}),onClick:toggleWaitingState,mb:2,children:isWaitingForUser?'Resume Interview':'Pause for Coding'})]}),/*#__PURE__*/_jsxs(Tabs,{isFitted:true,variant:\"enclosed\",children:[/*#__PURE__*/_jsxs(TabList,{children:[/*#__PURE__*/_jsx(Tab,{children:\"Challenge\"}),/*#__PURE__*/_jsx(Tab,{children:\"Code Editor\"}),testResults&&/*#__PURE__*/_jsx(Tab,{children:\"Results\"})]}),/*#__PURE__*/_jsxs(TabPanels,{children:[/*#__PURE__*/_jsx(TabPanel,{children:/*#__PURE__*/_jsxs(VStack,{align:\"stretch\",spacing:4,children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Heading,{size:\"sm\",mb:2,children:\"Problem Description\"}),/*#__PURE__*/_jsx(Text,{whiteSpace:\"pre-wrap\",children:challenge.description})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Heading,{size:\"sm\",mb:2,children:\"Example Test Cases\"}),/*#__PURE__*/_jsx(Accordion,{allowMultiple:true,children:challenge.visible_test_cases.map((testCase,index)=>/*#__PURE__*/_jsxs(AccordionItem,{children:[/*#__PURE__*/_jsx(\"h2\",{children:/*#__PURE__*/_jsxs(AccordionButton,{children:[/*#__PURE__*/_jsxs(Box,{flex:\"1\",textAlign:\"left\",children:[\"Test Case \",index+1]}),/*#__PURE__*/_jsx(AccordionIcon,{})]})}),/*#__PURE__*/_jsx(AccordionPanel,{pb:4,children:/*#__PURE__*/_jsxs(VStack,{align:\"stretch\",spacing:2,children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",children:\"Input:\"}),/*#__PURE__*/_jsx(Box,{bg:\"gray.100\",p:2,borderRadius:\"md\",children:/*#__PURE__*/_jsx(Text,{fontFamily:\"monospace\",children:JSON.stringify(testCase.input)})})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",children:\"Expected Output:\"}),/*#__PURE__*/_jsx(Box,{bg:\"gray.100\",p:2,borderRadius:\"md\",children:/*#__PURE__*/_jsx(Text,{fontFamily:\"monospace\",children:JSON.stringify(testCase.expected_output)})})]}),testCase.explanation&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",children:\"Explanation:\"}),/*#__PURE__*/_jsx(Text,{children:testCase.explanation})]})]})})]},index))})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Heading,{size:\"sm\",mb:2,children:\"Evaluation Criteria\"}),/*#__PURE__*/_jsx(VStack,{align:\"stretch\",children:Object.entries(challenge.evaluation_criteria).map(_ref2=>{let[key,value]=_ref2;return/*#__PURE__*/_jsxs(HStack,{children:[/*#__PURE__*/_jsx(Badge,{colorScheme:\"blue\",children:key}),/*#__PURE__*/_jsx(Text,{children:value})]},key);})})]})]})}),/*#__PURE__*/_jsx(TabPanel,{children:/*#__PURE__*/_jsxs(VStack,{align:\"stretch\",spacing:4,children:[/*#__PURE__*/_jsx(CodeEditor,{code:code,language:challenge.language.toLowerCase(),onChange:setCode}),/*#__PURE__*/_jsxs(HStack,{spacing:4,justify:\"flex-end\",children:[/*#__PURE__*/_jsx(Button,{leftIcon:/*#__PURE__*/_jsx(FaPlay,{}),colorScheme:\"blue\",variant:\"outline\",onClick:runTests,children:\"Run Tests\"}),/*#__PURE__*/_jsx(Button,{leftIcon:/*#__PURE__*/_jsx(FaCode,{}),colorScheme:\"purple\",variant:\"outline\",onClick:handleRequestHint,children:\"Request Hint\"}),/*#__PURE__*/_jsx(Button,{leftIcon:/*#__PURE__*/_jsx(FaCheck,{}),colorScheme:\"green\",isLoading:isSubmitting,onClick:handleSubmit,children:\"Submit Solution\"})]})]})}),testResults&&/*#__PURE__*/_jsx(TabPanel,{children:/*#__PURE__*/_jsxs(VStack,{align:\"stretch\",spacing:4,children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Heading,{size:\"sm\",mb:2,children:\"Overall Results\"}),/*#__PURE__*/_jsxs(Alert,{status:testResults.all_passed?'success':'warning',borderRadius:\"md\",children:[/*#__PURE__*/_jsx(AlertIcon,{}),testResults.all_passed?'All test cases passed!':`${testResults.passed_count||0} out of ${((_testResults$test_cas=testResults.test_cases)===null||_testResults$test_cas===void 0?void 0:_testResults$test_cas.length)||0} test cases passed.`]})]}),testResults.test_cases&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Heading,{size:\"sm\",mb:2,children:\"Test Case Results\"}),/*#__PURE__*/_jsx(VStack,{align:\"stretch\",spacing:2,children:testResults.test_cases.map((testCase,index)=>/*#__PURE__*/_jsxs(Box,{p:3,borderRadius:\"md\",borderWidth:\"1px\",borderColor:testCase.passed?'green.200':'red.200',bg:testCase.passed?'green.50':'red.50',children:[/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",mb:1,children:[/*#__PURE__*/_jsxs(Text,{fontWeight:\"bold\",children:[\"Test Case \",index+1]}),testCase.passed?/*#__PURE__*/_jsx(Badge,{colorScheme:\"green\",children:\"Passed\"}):/*#__PURE__*/_jsx(Badge,{colorScheme:\"red\",children:\"Failed\"})]}),!testCase.passed&&testCase.error&&/*#__PURE__*/_jsxs(Box,{mt:2,children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",color:\"red.500\",children:\"Error:\"}),/*#__PURE__*/_jsx(Box,{bg:\"red.100\",p:2,borderRadius:\"md\",mt:1,children:/*#__PURE__*/_jsx(Text,{fontFamily:\"monospace\",fontSize:\"sm\",children:testCase.error})})]}),!testCase.passed&&testCase.actual_output!==undefined&&/*#__PURE__*/_jsxs(Box,{mt:2,children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",children:\"Your Output:\"}),/*#__PURE__*/_jsx(Box,{bg:\"gray.100\",p:2,borderRadius:\"md\",mt:1,children:/*#__PURE__*/_jsx(Text,{fontFamily:\"monospace\",fontSize:\"sm\",children:JSON.stringify(testCase.actual_output)})})]})]},index))})]}),feedback&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Heading,{size:\"sm\",mb:2,children:\"Feedback\"}),/*#__PURE__*/_jsxs(VStack,{align:\"stretch\",spacing:3,children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",children:\"Summary:\"}),/*#__PURE__*/_jsx(Text,{children:feedback.summary})]}),feedback.strengths&&feedback.strengths.length>0&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",children:\"Strengths:\"}),/*#__PURE__*/_jsx(VStack,{align:\"stretch\",spacing:1,pl:4,children:feedback.strengths.map((strength,i)=>/*#__PURE__*/_jsxs(Text,{children:[\"\\u2022 \",strength]},i))})]}),feedback.areas_for_improvement&&feedback.areas_for_improvement.length>0&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",children:\"Areas for Improvement:\"}),/*#__PURE__*/_jsx(VStack,{align:\"stretch\",spacing:1,pl:4,children:feedback.areas_for_improvement.map((area,i)=>/*#__PURE__*/_jsxs(Text,{children:[\"\\u2022 \",area]},i))})]}),feedback.suggestions&&feedback.suggestions.length>0&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",children:\"Suggestions:\"}),/*#__PURE__*/_jsx(VStack,{align:\"stretch\",spacing:1,pl:4,children:feedback.suggestions.map((suggestion,i)=>/*#__PURE__*/_jsxs(Text,{children:[\"\\u2022 \",suggestion]},i))})]})]})]})]})})]})]})]});};export default CodingChallenge;","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Text","Heading","VStack","HStack","Badge","Divider","useToast","Alert","AlertIcon","Tabs","TabList","TabPanels","Tab","TabPanel","Accordion","AccordionItem","AccordionButton","AccordionPanel","AccordionIcon","FaPlay","FaCheck","FaTimes","FaPauseCircle","FaCode","CodeEditor","useInterview","submitChallengeCode","jsx","_jsx","jsxs","_jsxs","CodingChallenge","_ref","_testResults$test_cas","challenge","onComplete","onRequestHint","code","setCode","starter_code","isSubmitting","setIsSubmitting","testResults","setTestResults","feedback","setFeedback","isWaitingForUser","setIsWaitingForUser","toast","setInterviewStage","runTests","title","description","status","duration","isClosable","handleSubmit","trim","_result$evaluation","_result$evaluation2","_result$evaluation3","_result$evaluation4","result","challenge_id","execution_results","evaluation","passed","error","console","handleRequestHint","toggleWaitingState","p","borderRadius","borderWidth","children","overflow","bg","boxShadow","borderBottomWidth","justifyContent","mb","size","colorScheme","difficulty","toUpperCase","language","time_limit_mins","leftIcon","onClick","isFitted","variant","align","spacing","whiteSpace","allowMultiple","visible_test_cases","map","testCase","index","flex","textAlign","pb","fontWeight","fontFamily","JSON","stringify","input","expected_output","explanation","Object","entries","evaluation_criteria","_ref2","key","value","toLowerCase","onChange","justify","isLoading","all_passed","passed_count","test_cases","length","borderColor","mt","color","fontSize","actual_output","undefined","summary","strengths","pl","strength","i","areas_for_improvement","area","suggestions","suggestion"],"sources":["/home/glitch/Documents/ai-interviewer/frontend/src/components/CodingChallenge.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Text,\n  Heading,\n  VStack,\n  HStack,\n  Badge,\n  Divider,\n  useToast,\n  Alert,\n  AlertIcon,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n} from '@chakra-ui/react';\nimport { FaPlay, FaCheck, FaTimes, FaPauseCircle, FaCode } from 'react-icons/fa';\nimport CodeEditor from './CodeEditor';\nimport { useInterview } from '../context/InterviewContext';\nimport { submitChallengeCode } from '../api/interviewService';\n\n/**\n * CodingChallenge component for handling coding challenge interactions\n * \n * @param {Object} props Component props\n * @param {Object} props.challenge Challenge data (title, description, etc.)\n * @param {Function} props.onComplete Callback when challenge is completed\n * @param {Function} props.onRequestHint Callback to request a hint\n */\nconst CodingChallenge = ({ challenge, onComplete, onRequestHint }) => {\n  const [code, setCode] = useState(challenge?.starter_code || '');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [testResults, setTestResults] = useState(null);\n  const [feedback, setFeedback] = useState(null);\n  const [isWaitingForUser, setIsWaitingForUser] = useState(true);\n  const toast = useToast();\n  \n  const { setInterviewStage } = useInterview();\n  \n  // Set the interview stage to coding challenge\n  useEffect(() => {\n    setInterviewStage('coding_challenge');\n  }, [setInterviewStage]);\n  \n  // Run test cases locally for immediate feedback\n  const runTests = async () => {\n    // For now, just inform the user this is a local test\n    toast({\n      title: 'Running Tests',\n      description: 'Tests are running locally. This does not submit your solution.',\n      status: 'info',\n      duration: 3000,\n      isClosable: true,\n    });\n    \n    // This would be expanded to actually run tests in the future\n  };\n  \n  // Submit the solution to the AI for evaluation\n  const handleSubmit = async () => {\n    if (!code.trim()) {\n      toast({\n        title: 'Empty Solution',\n        description: 'Please write some code before submitting.',\n        status: 'warning',\n        duration: 3000,\n        isClosable: true,\n      });\n      return;\n    }\n    \n    try {\n      setIsSubmitting(true);\n      \n      // Submit the code to the API\n      const result = await submitChallengeCode(challenge.challenge_id, code);\n      \n      setTestResults(result.execution_results);\n      setFeedback(result.feedback);\n      \n      // If the challenge is passed, call the onComplete callback\n      if (result.evaluation?.passed) {\n        onComplete && onComplete(result);\n      }\n      \n      // Show toast notification with result\n      toast({\n        title: result.evaluation?.passed ? 'Challenge Passed!' : 'Submission Received',\n        description: result.evaluation?.passed \n          ? 'Great job! Your solution passed all test cases.' \n          : 'Your solution has been evaluated. Check the feedback for details.',\n        status: result.evaluation?.passed ? 'success' : 'info',\n        duration: 5000,\n        isClosable: true,\n      });\n    } catch (error) {\n      console.error('Error submitting code:', error);\n      toast({\n        title: 'Submission Error',\n        description: 'There was an error submitting your code. Please try again.',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  // Request a hint from the AI\n  const handleRequestHint = () => {\n    onRequestHint && onRequestHint(code);\n  };\n  \n  // Toggle between AI and user mode\n  const toggleWaitingState = () => {\n    setIsWaitingForUser(!isWaitingForUser);\n    \n    toast({\n      title: isWaitingForUser ? 'Resuming Interview' : 'Paused for Coding',\n      description: isWaitingForUser \n        ? 'Returning control to the AI interviewer.' \n        : 'Take your time to solve the challenge. The AI will wait.',\n      status: 'info',\n      duration: 3000,\n      isClosable: true,\n    });\n  };\n  \n  // If no challenge is provided, show a placeholder\n  if (!challenge) {\n    return (\n      <Box p={4} borderRadius=\"md\" borderWidth=\"1px\">\n        <Alert status=\"warning\">\n          <AlertIcon />\n          No coding challenge data available.\n        </Alert>\n      </Box>\n    );\n  }\n  \n  return (\n    <Box \n      borderWidth=\"1px\" \n      borderRadius=\"lg\" \n      overflow=\"hidden\" \n      bg=\"white\"\n      boxShadow=\"md\"\n    >\n      {/* Challenge Header */}\n      <Box bg=\"brand.50\" p={4} borderBottomWidth=\"1px\">\n        <HStack justifyContent=\"space-between\" mb={2}>\n          <Heading size=\"md\">{challenge.title}</Heading>\n          <HStack>\n            <Badge colorScheme={challenge.difficulty === 'easy' ? 'green' : challenge.difficulty === 'medium' ? 'orange' : 'red'}>\n              {challenge.difficulty.toUpperCase()}\n            </Badge>\n            <Badge colorScheme=\"blue\">{challenge.language}</Badge>\n            <Badge colorScheme=\"purple\">{challenge.time_limit_mins} min</Badge>\n          </HStack>\n        </HStack>\n        \n        {/* Waiting Status */}\n        <Alert status={isWaitingForUser ? 'success' : 'warning'} mb={2} size=\"sm\">\n          <AlertIcon />\n          {isWaitingForUser \n            ? 'The AI is waiting for you to solve this challenge.' \n            : 'The AI is currently engaged. Click \"Pause for Coding\" to take your time.'}\n        </Alert>\n        \n        {/* Toggle Button */}\n        <Button\n          size=\"sm\"\n          colorScheme={isWaitingForUser ? 'blue' : 'orange'}\n          leftIcon={isWaitingForUser ? <FaPlay /> : <FaPauseCircle />}\n          onClick={toggleWaitingState}\n          mb={2}\n        >\n          {isWaitingForUser ? 'Resume Interview' : 'Pause for Coding'}\n        </Button>\n      </Box>\n      \n      {/* Challenge Content */}\n      <Tabs isFitted variant=\"enclosed\">\n        <TabList>\n          <Tab>Challenge</Tab>\n          <Tab>Code Editor</Tab>\n          {testResults && <Tab>Results</Tab>}\n        </TabList>\n        \n        <TabPanels>\n          {/* Challenge Description Tab */}\n          <TabPanel>\n            <VStack align=\"stretch\" spacing={4}>\n              <Box>\n                <Heading size=\"sm\" mb={2}>Problem Description</Heading>\n                <Text whiteSpace=\"pre-wrap\">{challenge.description}</Text>\n              </Box>\n              \n              <Divider />\n              \n              {/* Test Cases */}\n              <Box>\n                <Heading size=\"sm\" mb={2}>Example Test Cases</Heading>\n                <Accordion allowMultiple>\n                  {challenge.visible_test_cases.map((testCase, index) => (\n                    <AccordionItem key={index}>\n                      <h2>\n                        <AccordionButton>\n                          <Box flex=\"1\" textAlign=\"left\">\n                            Test Case {index + 1}\n                          </Box>\n                          <AccordionIcon />\n                        </AccordionButton>\n                      </h2>\n                      <AccordionPanel pb={4}>\n                        <VStack align=\"stretch\" spacing={2}>\n                          <Box>\n                            <Text fontWeight=\"bold\">Input:</Text>\n                            <Box bg=\"gray.100\" p={2} borderRadius=\"md\">\n                              <Text fontFamily=\"monospace\">{JSON.stringify(testCase.input)}</Text>\n                            </Box>\n                          </Box>\n                          <Box>\n                            <Text fontWeight=\"bold\">Expected Output:</Text>\n                            <Box bg=\"gray.100\" p={2} borderRadius=\"md\">\n                              <Text fontFamily=\"monospace\">{JSON.stringify(testCase.expected_output)}</Text>\n                            </Box>\n                          </Box>\n                          {testCase.explanation && (\n                            <Box>\n                              <Text fontWeight=\"bold\">Explanation:</Text>\n                              <Text>{testCase.explanation}</Text>\n                            </Box>\n                          )}\n                        </VStack>\n                      </AccordionPanel>\n                    </AccordionItem>\n                  ))}\n                </Accordion>\n              </Box>\n              \n              <Divider />\n              \n              {/* Evaluation Criteria */}\n              <Box>\n                <Heading size=\"sm\" mb={2}>Evaluation Criteria</Heading>\n                <VStack align=\"stretch\">\n                  {Object.entries(challenge.evaluation_criteria).map(([key, value]) => (\n                    <HStack key={key}>\n                      <Badge colorScheme=\"blue\">{key}</Badge>\n                      <Text>{value}</Text>\n                    </HStack>\n                  ))}\n                </VStack>\n              </Box>\n            </VStack>\n          </TabPanel>\n          \n          {/* Code Editor Tab */}\n          <TabPanel>\n            <VStack align=\"stretch\" spacing={4}>\n              <CodeEditor\n                code={code}\n                language={challenge.language.toLowerCase()}\n                onChange={setCode}\n              />\n              \n              <HStack spacing={4} justify=\"flex-end\">\n                <Button\n                  leftIcon={<FaPlay />}\n                  colorScheme=\"blue\"\n                  variant=\"outline\"\n                  onClick={runTests}\n                >\n                  Run Tests\n                </Button>\n                <Button\n                  leftIcon={<FaCode />}\n                  colorScheme=\"purple\"\n                  variant=\"outline\"\n                  onClick={handleRequestHint}\n                >\n                  Request Hint\n                </Button>\n                <Button\n                  leftIcon={<FaCheck />}\n                  colorScheme=\"green\"\n                  isLoading={isSubmitting}\n                  onClick={handleSubmit}\n                >\n                  Submit Solution\n                </Button>\n              </HStack>\n            </VStack>\n          </TabPanel>\n          \n          {/* Results Tab */}\n          {testResults && (\n            <TabPanel>\n              <VStack align=\"stretch\" spacing={4}>\n                {/* Overall Results */}\n                <Box>\n                  <Heading size=\"sm\" mb={2}>Overall Results</Heading>\n                  <Alert\n                    status={testResults.all_passed ? 'success' : 'warning'}\n                    borderRadius=\"md\"\n                  >\n                    <AlertIcon />\n                    {testResults.all_passed\n                      ? 'All test cases passed!'\n                      : `${testResults.passed_count || 0} out of ${testResults.test_cases?.length || 0} test cases passed.`}\n                  </Alert>\n                </Box>\n                \n                {/* Test Case Results */}\n                {testResults.test_cases && (\n                  <Box>\n                    <Heading size=\"sm\" mb={2}>Test Case Results</Heading>\n                    <VStack align=\"stretch\" spacing={2}>\n                      {testResults.test_cases.map((testCase, index) => (\n                        <Box\n                          key={index}\n                          p={3}\n                          borderRadius=\"md\"\n                          borderWidth=\"1px\"\n                          borderColor={testCase.passed ? 'green.200' : 'red.200'}\n                          bg={testCase.passed ? 'green.50' : 'red.50'}\n                        >\n                          <HStack justify=\"space-between\" mb={1}>\n                            <Text fontWeight=\"bold\">Test Case {index + 1}</Text>\n                            {testCase.passed ? (\n                              <Badge colorScheme=\"green\">Passed</Badge>\n                            ) : (\n                              <Badge colorScheme=\"red\">Failed</Badge>\n                            )}\n                          </HStack>\n                          \n                          {!testCase.passed && testCase.error && (\n                            <Box mt={2}>\n                              <Text fontWeight=\"bold\" color=\"red.500\">Error:</Text>\n                              <Box bg=\"red.100\" p={2} borderRadius=\"md\" mt={1}>\n                                <Text fontFamily=\"monospace\" fontSize=\"sm\">\n                                  {testCase.error}\n                                </Text>\n                              </Box>\n                            </Box>\n                          )}\n                          \n                          {!testCase.passed && testCase.actual_output !== undefined && (\n                            <Box mt={2}>\n                              <Text fontWeight=\"bold\">Your Output:</Text>\n                              <Box bg=\"gray.100\" p={2} borderRadius=\"md\" mt={1}>\n                                <Text fontFamily=\"monospace\" fontSize=\"sm\">\n                                  {JSON.stringify(testCase.actual_output)}\n                                </Text>\n                              </Box>\n                            </Box>\n                          )}\n                        </Box>\n                      ))}\n                    </VStack>\n                  </Box>\n                )}\n                \n                {/* Feedback */}\n                {feedback && (\n                  <Box>\n                    <Heading size=\"sm\" mb={2}>Feedback</Heading>\n                    <VStack align=\"stretch\" spacing={3}>\n                      <Box>\n                        <Text fontWeight=\"bold\">Summary:</Text>\n                        <Text>{feedback.summary}</Text>\n                      </Box>\n                      \n                      {feedback.strengths && feedback.strengths.length > 0 && (\n                        <Box>\n                          <Text fontWeight=\"bold\">Strengths:</Text>\n                          <VStack align=\"stretch\" spacing={1} pl={4}>\n                            {feedback.strengths.map((strength, i) => (\n                              <Text key={i}>• {strength}</Text>\n                            ))}\n                          </VStack>\n                        </Box>\n                      )}\n                      \n                      {feedback.areas_for_improvement && feedback.areas_for_improvement.length > 0 && (\n                        <Box>\n                          <Text fontWeight=\"bold\">Areas for Improvement:</Text>\n                          <VStack align=\"stretch\" spacing={1} pl={4}>\n                            {feedback.areas_for_improvement.map((area, i) => (\n                              <Text key={i}>• {area}</Text>\n                            ))}\n                          </VStack>\n                        </Box>\n                      )}\n                      \n                      {feedback.suggestions && feedback.suggestions.length > 0 && (\n                        <Box>\n                          <Text fontWeight=\"bold\">Suggestions:</Text>\n                          <VStack align=\"stretch\" spacing={1} pl={4}>\n                            {feedback.suggestions.map((suggestion, i) => (\n                              <Text key={i}>• {suggestion}</Text>\n                            ))}\n                          </VStack>\n                        </Box>\n                      )}\n                    </VStack>\n                  </Box>\n                )}\n              </VStack>\n            </TabPanel>\n          )}\n        </TabPanels>\n      </Tabs>\n    </Box>\n  );\n};\n\nexport default CodingChallenge; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}