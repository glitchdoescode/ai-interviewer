{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{Box,Flex,Input,IconButton,VStack,Text,Button,Spinner,Alert,AlertIcon,useToast,Modal,ModalOverlay,ModalContent,ModalHeader,ModalBody,ModalFooter,useDisclosure,Divider}from'@chakra-ui/react';import{FaPaperPlane,FaMicrophone,FaStop,FaExclamationTriangle}from'react-icons/fa';import ChatMessage from'./ChatMessage';import CodingChallenge from'./CodingChallenge';import{useInterview}from'../context/InterviewContext';import useAudioRecorder from'../hooks/useAudioRecorder';import{startInterview,continueInterview,transcribeAndRespond,continueAfterCodingChallenge,getChallengeHint}from'../api/interviewService';import{Link}from'react-router-dom';/**\n * Chat interface component for interview interactions\n * \n * @param {Object} props Component props\n * @param {Object} props.jobRoleData Optional job role configuration data\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatInterface=_ref=>{let{jobRoleData}=_ref;const{userId,sessionId,messages,loading,error,voiceMode,// Remove unused interviewStage\nsetSessionId,addMessage,setLoading,setError,setVoiceMode}=useInterview();const[messageInput,setMessageInput]=useState('');const[currentCodingChallenge,setCurrentCodingChallenge]=useState(null);const[isWaitingForCodingChallenge,setIsWaitingForCodingChallenge]=useState(false);const[showPermissionHelp,setShowPermissionHelp]=useState(false);const messagesEndRef=useRef(null);const toast=useToast();const{isOpen,onOpen,onClose}=useDisclosure();// Audio recording functionality\nconst{isRecording,error:audioError,startRecording,stopRecording,getAudioBase64,isInitializing,permissionGranted,initRecording,checkPermissionStatus}=useAudioRecorder();// Initialize audio on component mount for better user experience\nuseEffect(()=>{if(voiceMode){// Pre-initialize audio in voice mode\ncheckPermissionStatus().then(hasAccess=>{if(!hasAccess&&!permissionGranted){setShowPermissionHelp(true);}}).catch(err=>{console.error('Failed to check microphone permissions:',err);});}},[voiceMode,checkPermissionStatus,permissionGranted]);// Show permission help modal when needed\nuseEffect(()=>{if(showPermissionHelp){onOpen();}},[showPermissionHelp,onOpen]);// Scroll to bottom when messages change\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});},[messages]);// Show toast for audio errors\nuseEffect(()=>{if(audioError){// Show more user-friendly error messages\nlet errorMessage=audioError;if(audioError.includes('permission denied')||audioError.includes('NotAllowedError')){errorMessage='Microphone access was denied. Please check your browser settings.';setShowPermissionHelp(true);}toast({title:'Audio Error',description:errorMessage,status:'error',duration:5000,isClosable:true});}},[audioError,toast]);// Check for coding challenge instructions in AI messages\nuseEffect(()=>{// Look for coding challenge data in the latest message\nif(messages.length>0){const lastMessage=messages[messages.length-1];if(lastMessage.role==='assistant'){// Check if the message contains coding challenge data\n// This could be embedded in a tool_call from the LLM\nif(lastMessage.tool_calls&&lastMessage.tool_calls.length>0){const startCodingChallengeTool=lastMessage.tool_calls.find(tool=>tool.name==='start_coding_challenge');if(startCodingChallengeTool&&startCodingChallengeTool.result){try{const challengeData=typeof startCodingChallengeTool.result==='string'?JSON.parse(startCodingChallengeTool.result):startCodingChallengeTool.result;if(challengeData.status==='success'){setCurrentCodingChallenge(challengeData);setIsWaitingForCodingChallenge(true);}}catch(err){console.error('Error parsing coding challenge data:',err);}}}}}},[messages]);// Function to handle sending a new message\nconst handleSendMessage=async()=>{// Don't send empty messages\nif(!messageInput.trim())return;try{// Set loading state\nsetLoading(true);// Add user message to chat\naddMessage({role:'user',content:messageInput});// Clear the input field\nsetMessageInput('');let response;// If we have a session ID, continue the interview, otherwise start a new one\nif(sessionId){// Check if we were in a coding challenge\nif(isWaitingForCodingChallenge){response=await continueAfterCodingChallenge(messageInput,sessionId,userId,true// assume user is done with challenge when they send a message\n);// Reset coding challenge state\nsetCurrentCodingChallenge(null);setIsWaitingForCodingChallenge(false);}else{response=await continueInterview(messageInput,sessionId,userId,jobRoleData);}}else{response=await startInterview(messageInput,userId,jobRoleData);// Set the session ID from the response\nsetSessionId(response.session_id);}// Add AI response to chat\naddMessage({role:'assistant',content:response.response,tool_calls:response.tool_calls});// Clear any errors\nsetError(null);}catch(err){console.error('Error sending message:',err);setError('Failed to send message. Please try again.');}finally{setLoading(false);}};// Function to handle voice recording\nconst handleVoiceRecording=async()=>{if(isRecording){try{// Stop recording\nconst audioData=await stopRecording();if(!audioData||!audioData.blob){throw new Error('Failed to get audio data.');}// Get base64-encoded audio\nconst audioBase64=await getAudioBase64(audioData.blob);if(!audioBase64){throw new Error('Failed to encode audio data.');}// Set loading state\nsetLoading(true);// Add user message with loading indicator\naddMessage({role:'user',content:'ðŸŽ¤ Transcribing audio...',loading:true});// Send audio for transcription and get response\nconst response=await transcribeAndRespond(audioBase64,userId,sessionId,jobRoleData);console.log('Audio response received:',response);// Update user message with transcription\naddMessage({role:'user',content:response.transcription});// If we don't have a session ID yet, set it\nif(!sessionId){setSessionId(response.session_id);}// Add AI response\naddMessage({role:'assistant',content:response.response,audioUrl:response.audio_response_url,tool_calls:response.tool_calls});}catch(err){console.error('Error processing voice recording:',err);setError('Failed to process audio. Please try again.');// Add error message\naddMessage({role:'system',content:`Error: ${err.message||'Failed to process audio'}`,isError:true});}finally{setLoading(false);}}else{// Start recording\ntry{setLoading(true);// First check permission status\nconst hasPermission=await checkPermissionStatus();if(!hasPermission&&!permissionGranted){setShowPermissionHelp(true);setLoading(false);return;}// Show initialization message\nif(!permissionGranted){addMessage({role:'system',content:'Requesting microphone permission...',isSystem:true});}const started=await startRecording();if(!started){throw new Error(audioError||'Failed to start recording');}// Show recording started message\naddMessage({role:'system',content:'Recording started. Speak now and click the stop button when finished.',isSystem:true});}catch(err){var _err$message,_err$message2;console.error('Error starting voice recording:',err);// Show a helpful message based on the error\nlet errorMessage='Could not start recording.';if((_err$message=err.message)!==null&&_err$message!==void 0&&_err$message.includes('permission')||err.name==='NotAllowedError'){errorMessage='Microphone permission denied. Please allow it in your browser settings.';setShowPermissionHelp(true);}else if((_err$message2=err.message)!==null&&_err$message2!==void 0&&_err$message2.includes('AudioContext')){errorMessage='Audio system initialization failed. Try clicking the button again.';}setError(errorMessage);// Add error message to chat\naddMessage({role:'system',content:`Error: ${errorMessage}`,isError:true});}finally{setLoading(false);}}};// Function to handle retrying microphone access\nconst handleRetryMicrophoneAccess=async()=>{setShowPermissionHelp(false);onClose();try{setLoading(true);const initialized=await initRecording();if(initialized){toast({title:'Success',description:'Microphone access granted!',status:'success',duration:3000});}}catch(err){console.error('Error during microphone retry:',err);}finally{setLoading(false);}};// Handle coding challenge hint request\nconst handleRequestHint=async currentCode=>{if(!currentCodingChallenge)return;try{setLoading(true);const hintResponse=await getChallengeHint(currentCodingChallenge.challenge_id,currentCode,userId,sessionId);// Add hint as an AI message\nif(hintResponse.hints&&hintResponse.hints.length>0){addMessage({role:'assistant',content:`Hint: ${hintResponse.hints.join('\\n\\n')}`,isHint:true});}else{addMessage({role:'assistant',content:\"I don't have a specific hint for this code at the moment. Try breaking down the problem into smaller steps.\",isHint:true});}}catch(err){console.error('Error getting hint:',err);toast({title:'Hint Error',description:'Failed to get a hint. Please try again later.',status:'error',duration:5000,isClosable:true});}finally{setLoading(false);}};// No need for handleKeyDown as we use onKeyPress directly in the Input component\nreturn/*#__PURE__*/_jsxs(Flex,{direction:\"column\",h:\"100vh\",overflow:\"hidden\",children:[/*#__PURE__*/_jsx(Box,{flex:\"1\",overflow:\"auto\",p:4,children:/*#__PURE__*/_jsxs(VStack,{spacing:4,align:\"stretch\",children:[messages.map((message,index)=>{// Check if this is a coding challenge message from the AI\nif(message.role==='assistant'&&message.tool_calls&&message.tool_calls.some(call=>call.name==='start_coding_challenge')){// Extract the coding challenge data\nconst codingChallenge=message.tool_calls.find(call=>call.name==='start_coding_challenge').result;// Store the coding challenge for later use\nif(!currentCodingChallenge){setCurrentCodingChallenge(codingChallenge);setIsWaitingForCodingChallenge(true);}// Render both the message and the coding challenge\nreturn/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(ChatMessage,{message:message}),/*#__PURE__*/_jsx(CodingChallenge,{challenge:codingChallenge,onSubmit:(code,isCompleted)=>{// Submit the code and continue the interview\ntry{setLoading(true);continueAfterCodingChallenge(code,sessionId,userId,isCompleted).then(response=>{// Add AI response to chat\naddMessage({role:'assistant',content:response.response,tool_calls:response.tool_calls});// Reset coding challenge state\nsetIsWaitingForCodingChallenge(false);setCurrentCodingChallenge(null);setLoading(false);}).catch(err=>{console.error('Error submitting code:',err);setError('Failed to submit code solution. Please try again.');setLoading(false);});}catch(err){console.error('Error preparing code submission:',err);setError('Failed to submit code. Please try again.');setLoading(false);}},onRequestHint:code=>handleRequestHint(code),isWaiting:isWaitingForCodingChallenge})]},index);}// Regular message\nconsole.log('Rendering ChatMessage with:',{content:message.content,audioUrl:message.audioUrl,fullMessage:message});return/*#__PURE__*/_jsx(ChatMessage,{message:message.content||message.message||'',sender:message.role||message.sender||'assistant',audioUrl:message.audioUrl||'',isHint:message.isHint||false,isLoading:message.loading||false},index);}),loading&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"center\",p:4,children:[/*#__PURE__*/_jsx(Spinner,{size:\"md\",color:\"blue.500\",mr:2}),/*#__PURE__*/_jsx(Text,{children:isInitializing?'Initializing audio...':'Processing...'})]}),(error||audioError)&&/*#__PURE__*/_jsxs(Alert,{status:\"error\",variant:\"left-accent\",my:2,children:[/*#__PURE__*/_jsx(AlertIcon,{}),/*#__PURE__*/_jsx(Text,{children:error||audioError}),((error===null||error===void 0?void 0:error.includes('permission'))||(audioError===null||audioError===void 0?void 0:audioError.includes('permission')))&&/*#__PURE__*/_jsx(Button,{size:\"sm\",ml:2,onClick:()=>setShowPermissionHelp(true),children:\"Help\"})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})}),/*#__PURE__*/_jsxs(Flex,{p:4,borderTop:\"1px\",borderColor:\"gray.200\",alignItems:\"center\",backgroundColor:\"white\",children:[/*#__PURE__*/_jsx(Input,{placeholder:\"Type your message...\",value:messageInput,onChange:e=>setMessageInput(e.target.value),onKeyPress:e=>e.key==='Enter'&&handleSendMessage(),mr:2,disabled:loading||isWaitingForCodingChallenge}),/*#__PURE__*/_jsx(IconButton,{icon:/*#__PURE__*/_jsx(FaPaperPlane,{}),colorScheme:\"blue\",\"aria-label\":\"Send message\",onClick:handleSendMessage,mr:2,isDisabled:loading||!messageInput.trim()||isWaitingForCodingChallenge}),/*#__PURE__*/_jsx(IconButton,{icon:isRecording?/*#__PURE__*/_jsx(FaStop,{}):/*#__PURE__*/_jsx(FaMicrophone,{}),colorScheme:isRecording?\"red\":\"blue\",\"aria-label\":isRecording?\"Stop recording\":\"Start recording\",onClick:handleVoiceRecording,isDisabled:loading&&!isRecording||isWaitingForCodingChallenge||isInitializing,isLoading:isInitializing}),voiceMode?/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",ml:2,onClick:()=>setVoiceMode(false),children:\"Text Mode\"}):/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",ml:2,onClick:()=>setVoiceMode(true),children:\"Voice Mode\"})]}),/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,onClose:onClose,children:[/*#__PURE__*/_jsx(ModalOverlay,{}),/*#__PURE__*/_jsxs(ModalContent,{children:[/*#__PURE__*/_jsx(ModalHeader,{children:\"Microphone Access Required\"}),/*#__PURE__*/_jsx(ModalBody,{children:/*#__PURE__*/_jsxs(VStack,{spacing:4,align:\"stretch\",children:[/*#__PURE__*/_jsxs(Alert,{status:\"info\",children:[/*#__PURE__*/_jsx(AlertIcon,{}),/*#__PURE__*/_jsx(Text,{children:\"Voice mode requires microphone access to function properly.\"})]}),/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",children:\"How to enable microphone access:\"}),/*#__PURE__*/_jsxs(VStack,{align:\"start\",spacing:2,pl:4,children:[/*#__PURE__*/_jsx(Text,{children:\"1. Look for the microphone icon in your browser's address bar\"}),/*#__PURE__*/_jsx(Text,{children:\"2. Click on it and select \\\"Allow\\\"\"}),/*#__PURE__*/_jsx(Text,{children:\"3. If not visible, go to your browser settings\"}),/*#__PURE__*/_jsx(Text,{children:\"4. Find \\\"Site Settings\\\" or \\\"Privacy & Security\\\"\"}),/*#__PURE__*/_jsx(Text,{children:\"5. Locate \\\"Microphone\\\" permissions and allow for this site\"})]}),/*#__PURE__*/_jsxs(Alert,{status:\"warning\",children:[/*#__PURE__*/_jsx(AlertIcon,{as:FaExclamationTriangle}),/*#__PURE__*/_jsx(Text,{children:\"After enabling permissions, you may need to refresh the page.\"})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",mb:2,children:\"Still having issues?\"}),/*#__PURE__*/_jsx(Button,{as:Link,to:\"/microphone-test\",colorScheme:\"teal\",size:\"sm\",width:\"full\",onClick:onClose,children:\"Open Microphone Troubleshooter\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",mt:2,children:\"The troubleshooter will help diagnose and fix microphone issues.\"})]})]})}),/*#__PURE__*/_jsxs(ModalFooter,{children:[/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",mr:3,onClick:handleRetryMicrophoneAccess,children:\"Try Again\"}),/*#__PURE__*/_jsx(Button,{variant:\"ghost\",onClick:onClose,children:\"Close\"})]})]})]})]});};export default ChatInterface;","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Flex","Input","IconButton","VStack","Text","Button","Spinner","Alert","AlertIcon","useToast","Modal","ModalOverlay","ModalContent","ModalHeader","ModalBody","ModalFooter","useDisclosure","Divider","FaPaperPlane","FaMicrophone","FaStop","FaExclamationTriangle","ChatMessage","CodingChallenge","useInterview","useAudioRecorder","startInterview","continueInterview","transcribeAndRespond","continueAfterCodingChallenge","getChallengeHint","Link","jsx","_jsx","jsxs","_jsxs","ChatInterface","_ref","jobRoleData","userId","sessionId","messages","loading","error","voiceMode","setSessionId","addMessage","setLoading","setError","setVoiceMode","messageInput","setMessageInput","currentCodingChallenge","setCurrentCodingChallenge","isWaitingForCodingChallenge","setIsWaitingForCodingChallenge","showPermissionHelp","setShowPermissionHelp","messagesEndRef","toast","isOpen","onOpen","onClose","isRecording","audioError","startRecording","stopRecording","getAudioBase64","isInitializing","permissionGranted","initRecording","checkPermissionStatus","then","hasAccess","catch","err","console","_messagesEndRef$curre","current","scrollIntoView","behavior","errorMessage","includes","title","description","status","duration","isClosable","length","lastMessage","role","tool_calls","startCodingChallengeTool","find","tool","name","result","challengeData","JSON","parse","handleSendMessage","trim","content","response","session_id","handleVoiceRecording","audioData","blob","Error","audioBase64","log","transcription","audioUrl","audio_response_url","message","isError","hasPermission","isSystem","started","_err$message","_err$message2","handleRetryMicrophoneAccess","initialized","handleRequestHint","currentCode","hintResponse","challenge_id","hints","join","isHint","direction","h","overflow","children","flex","p","spacing","align","map","index","some","call","codingChallenge","Fragment","challenge","onSubmit","code","isCompleted","onRequestHint","isWaiting","fullMessage","sender","isLoading","justifyContent","size","color","mr","variant","my","ml","onClick","ref","borderTop","borderColor","alignItems","backgroundColor","placeholder","value","onChange","e","target","onKeyPress","key","disabled","icon","colorScheme","isDisabled","fontWeight","pl","as","mb","to","width","fontSize","mt"],"sources":["/home/glitch/Documents/ai-interviewer/frontend/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {\n  Box,\n  Flex,\n  Input,\n  IconButton,\n  VStack,\n  Text,\n  Button,\n  Spinner,\n  Alert,\n  AlertIcon,\n  useToast,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  useDisclosure,\n  Divider\n} from '@chakra-ui/react';\nimport { FaPaperPlane, FaMicrophone, FaStop, FaExclamationTriangle } from 'react-icons/fa';\nimport ChatMessage from './ChatMessage';\nimport CodingChallenge from './CodingChallenge';\nimport { useInterview } from '../context/InterviewContext';\nimport useAudioRecorder from '../hooks/useAudioRecorder';\nimport { \n  startInterview, \n  continueInterview, \n  transcribeAndRespond,\n  continueAfterCodingChallenge,\n  getChallengeHint\n} from '../api/interviewService';\nimport { Link } from 'react-router-dom';\n\n\n/**\n * Chat interface component for interview interactions\n * \n * @param {Object} props Component props\n * @param {Object} props.jobRoleData Optional job role configuration data\n */\nconst ChatInterface = ({ jobRoleData }) => {\n  const {\n    userId,\n    sessionId,\n    messages,\n    loading,\n    error,\n    voiceMode,\n    // Remove unused interviewStage\n    setSessionId,\n    addMessage,\n    setLoading,\n    setError,\n    setVoiceMode,\n  } = useInterview();\n\n  const [messageInput, setMessageInput] = useState('');\n  const [currentCodingChallenge, setCurrentCodingChallenge] = useState(null);\n  const [isWaitingForCodingChallenge, setIsWaitingForCodingChallenge] = useState(false);\n  const [showPermissionHelp, setShowPermissionHelp] = useState(false);\n  const messagesEndRef = useRef(null);\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  // Audio recording functionality\n  const {\n    isRecording,\n    error: audioError,\n    startRecording,\n    stopRecording,\n    getAudioBase64,\n    isInitializing,\n    permissionGranted,\n    initRecording,\n    checkPermissionStatus\n  } = useAudioRecorder();\n\n  // Initialize audio on component mount for better user experience\n  useEffect(() => {\n    if (voiceMode) {\n      // Pre-initialize audio in voice mode\n      checkPermissionStatus().then(hasAccess => {\n        if (!hasAccess && !permissionGranted) {\n          setShowPermissionHelp(true);\n        }\n      }).catch(err => {\n        console.error('Failed to check microphone permissions:', err);\n      });\n    }\n  }, [voiceMode, checkPermissionStatus, permissionGranted]);\n\n  // Show permission help modal when needed\n  useEffect(() => {\n    if (showPermissionHelp) {\n      onOpen();\n    }\n  }, [showPermissionHelp, onOpen]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Show toast for audio errors\n  useEffect(() => {\n    if (audioError) {\n      // Show more user-friendly error messages\n      let errorMessage = audioError;\n      if (audioError.includes('permission denied') || audioError.includes('NotAllowedError')) {\n        errorMessage = 'Microphone access was denied. Please check your browser settings.';\n        setShowPermissionHelp(true);\n      }\n\n      toast({\n        title: 'Audio Error',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  }, [audioError, toast]);\n\n  // Check for coding challenge instructions in AI messages\n  useEffect(() => {\n    // Look for coding challenge data in the latest message\n    if (messages.length > 0) {\n      const lastMessage = messages[messages.length - 1];\n      if (lastMessage.role === 'assistant') {\n        // Check if the message contains coding challenge data\n        // This could be embedded in a tool_call from the LLM\n        if (lastMessage.tool_calls && lastMessage.tool_calls.length > 0) {\n          const startCodingChallengeTool = lastMessage.tool_calls.find(\n            tool => tool.name === 'start_coding_challenge'\n          );\n          \n          if (startCodingChallengeTool && startCodingChallengeTool.result) {\n            try {\n              const challengeData = typeof startCodingChallengeTool.result === 'string' \n                ? JSON.parse(startCodingChallengeTool.result) \n                : startCodingChallengeTool.result;\n                \n              if (challengeData.status === 'success') {\n                setCurrentCodingChallenge(challengeData);\n                setIsWaitingForCodingChallenge(true);\n              }\n            } catch (err) {\n              console.error('Error parsing coding challenge data:', err);\n            }\n          }\n        }\n      }\n    }\n  }, [messages]);\n\n  // Function to handle sending a new message\n  const handleSendMessage = async () => {\n    // Don't send empty messages\n    if (!messageInput.trim()) return;\n\n    try {\n      // Set loading state\n      setLoading(true);\n      \n      // Add user message to chat\n      addMessage({\n        role: 'user',\n        content: messageInput,\n      });\n      \n      // Clear the input field\n      setMessageInput('');\n      \n      let response;\n      \n      // If we have a session ID, continue the interview, otherwise start a new one\n      if (sessionId) {\n        // Check if we were in a coding challenge\n        if (isWaitingForCodingChallenge) {\n          response = await continueAfterCodingChallenge(\n            messageInput, \n            sessionId, \n            userId, \n            true // assume user is done with challenge when they send a message\n          );\n          \n          // Reset coding challenge state\n          setCurrentCodingChallenge(null);\n          setIsWaitingForCodingChallenge(false);\n        } else {\n          response = await continueInterview(messageInput, sessionId, userId, jobRoleData);\n        }\n      } else {\n        response = await startInterview(messageInput, userId, jobRoleData);\n        \n        // Set the session ID from the response\n        setSessionId(response.session_id);\n      }\n      \n      // Add AI response to chat\n      addMessage({\n        role: 'assistant',\n        content: response.response,\n        tool_calls: response.tool_calls\n      });\n      \n      // Clear any errors\n      setError(null);\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError('Failed to send message. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to handle voice recording\n  const handleVoiceRecording = async () => {\n    if (isRecording) {\n      try {\n        // Stop recording\n        const audioData = await stopRecording();\n        \n        if (!audioData || !audioData.blob) {\n          throw new Error('Failed to get audio data.');\n        }\n        \n        // Get base64-encoded audio\n        const audioBase64 = await getAudioBase64(audioData.blob);\n        \n        if (!audioBase64) {\n          throw new Error('Failed to encode audio data.');\n        }\n        \n        // Set loading state\n        setLoading(true);\n        \n        // Add user message with loading indicator\n        addMessage({\n          role: 'user',\n          content: 'ðŸŽ¤ Transcribing audio...',\n          loading: true,\n        });\n        \n        // Send audio for transcription and get response\n        const response = await transcribeAndRespond(audioBase64, userId, sessionId, jobRoleData);\n        \n        console.log('Audio response received:', response);\n        \n        // Update user message with transcription\n        addMessage({\n          role: 'user',\n          content: response.transcription,\n        });\n        \n        // If we don't have a session ID yet, set it\n        if (!sessionId) {\n          setSessionId(response.session_id);\n        }\n        \n        // Add AI response\n        addMessage({\n          role: 'assistant',\n          content: response.response,\n          audioUrl: response.audio_response_url,\n          tool_calls: response.tool_calls\n        });\n      } catch (err) {\n        console.error('Error processing voice recording:', err);\n        setError('Failed to process audio. Please try again.');\n        // Add error message\n        addMessage({\n          role: 'system',\n          content: `Error: ${err.message || 'Failed to process audio'}`,\n          isError: true,\n        });\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      // Start recording\n      try {\n        setLoading(true);\n        \n        // First check permission status\n        const hasPermission = await checkPermissionStatus();\n        \n        if (!hasPermission && !permissionGranted) {\n          setShowPermissionHelp(true);\n          setLoading(false);\n          return;\n        }\n        \n        // Show initialization message\n        if (!permissionGranted) {\n          addMessage({\n            role: 'system',\n            content: 'Requesting microphone permission...',\n            isSystem: true,\n          });\n        }\n        \n        const started = await startRecording();\n        \n        if (!started) {\n          throw new Error(audioError || 'Failed to start recording');\n        }\n        \n        // Show recording started message\n        addMessage({\n          role: 'system',\n          content: 'Recording started. Speak now and click the stop button when finished.',\n          isSystem: true,\n        });\n      } catch (err) {\n        console.error('Error starting voice recording:', err);\n        \n        // Show a helpful message based on the error\n        let errorMessage = 'Could not start recording.';\n        if (err.message?.includes('permission') || err.name === 'NotAllowedError') {\n          errorMessage = 'Microphone permission denied. Please allow it in your browser settings.';\n          setShowPermissionHelp(true);\n        } else if (err.message?.includes('AudioContext')) {\n          errorMessage = 'Audio system initialization failed. Try clicking the button again.';\n        }\n        \n        setError(errorMessage);\n        \n        // Add error message to chat\n        addMessage({\n          role: 'system',\n          content: `Error: ${errorMessage}`,\n          isError: true,\n        });\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  // Function to handle retrying microphone access\n  const handleRetryMicrophoneAccess = async () => {\n    setShowPermissionHelp(false);\n    onClose();\n    \n    try {\n      setLoading(true);\n      const initialized = await initRecording();\n      \n      if (initialized) {\n        toast({\n          title: 'Success',\n          description: 'Microphone access granted!',\n          status: 'success',\n          duration: 3000,\n        });\n      }\n    } catch (err) {\n      console.error('Error during microphone retry:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle coding challenge hint request\n  const handleRequestHint = async (currentCode) => {\n    if (!currentCodingChallenge) return;\n    \n    try {\n      setLoading(true);\n      \n      const hintResponse = await getChallengeHint(\n        currentCodingChallenge.challenge_id,\n        currentCode,\n        userId,\n        sessionId\n      );\n      \n      // Add hint as an AI message\n      if (hintResponse.hints && hintResponse.hints.length > 0) {\n        addMessage({\n          role: 'assistant',\n          content: `Hint: ${hintResponse.hints.join('\\n\\n')}`,\n          isHint: true\n        });\n      } else {\n        addMessage({\n          role: 'assistant',\n          content: \"I don't have a specific hint for this code at the moment. Try breaking down the problem into smaller steps.\",\n          isHint: true\n        });\n      }\n    } catch (err) {\n      console.error('Error getting hint:', err);\n      \n      toast({\n        title: 'Hint Error',\n        description: 'Failed to get a hint. Please try again later.',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // No need for handleKeyDown as we use onKeyPress directly in the Input component\n\n  return (\n    <Flex direction=\"column\" h=\"100vh\" overflow=\"hidden\">\n      <Box flex=\"1\" overflow=\"auto\" p={4}>\n        <VStack spacing={4} align=\"stretch\">\n          {messages.map((message, index) => {\n            // Check if this is a coding challenge message from the AI\n            if (\n              message.role === 'assistant' && \n              message.tool_calls && \n              message.tool_calls.some(call => call.name === 'start_coding_challenge')\n            ) {\n              // Extract the coding challenge data\n              const codingChallenge = message.tool_calls.find(\n                call => call.name === 'start_coding_challenge'\n              ).result;\n              \n              // Store the coding challenge for later use\n              if (!currentCodingChallenge) {\n                setCurrentCodingChallenge(codingChallenge);\n                setIsWaitingForCodingChallenge(true);\n              }\n              \n              // Render both the message and the coding challenge\n              return (\n                <React.Fragment key={index}>\n                  <ChatMessage message={message} />\n                   <CodingChallenge \n                     challenge={codingChallenge}\n                     onSubmit={(code, isCompleted) => {\n                       // Submit the code and continue the interview\n                       try {\n                         setLoading(true);\n                         continueAfterCodingChallenge(\n                           code, \n                           sessionId, \n                           userId, \n                           isCompleted\n                         ).then(response => {\n                           // Add AI response to chat\n                           addMessage({\n                             role: 'assistant',\n                             content: response.response,\n                             tool_calls: response.tool_calls\n                           });\n                           \n                           // Reset coding challenge state\n                           setIsWaitingForCodingChallenge(false);\n                           setCurrentCodingChallenge(null);\n                           setLoading(false);\n                         }).catch(err => {\n                           console.error('Error submitting code:', err);\n                           setError('Failed to submit code solution. Please try again.');\n                           setLoading(false);\n                         });\n                       } catch (err) {\n                         console.error('Error preparing code submission:', err);\n                         setError('Failed to submit code. Please try again.');\n                         setLoading(false);\n                       }\n                     }}\n                     onRequestHint={(code) => handleRequestHint(code)}\n                     isWaiting={isWaitingForCodingChallenge}\n                   />\n                </React.Fragment>\n              );\n            }\n            \n            // Regular message\n            console.log('Rendering ChatMessage with:', { \n              content: message.content, \n              audioUrl: message.audioUrl,\n              fullMessage: message \n            });\n            return <ChatMessage \n              key={index} \n              message={message.content || message.message || ''} \n              sender={message.role || message.sender || 'assistant'} \n              audioUrl={message.audioUrl || ''} \n              isHint={message.isHint || false} \n              isLoading={message.loading || false} \n            />;\n          })}\n          \n          {/* Loading indicator */}\n          {loading && (\n            <Flex justifyContent=\"center\" p={4}>\n              <Spinner size=\"md\" color=\"blue.500\" mr={2} />\n              <Text>{isInitializing ? 'Initializing audio...' : 'Processing...'}</Text>\n            </Flex>\n          )}\n          \n          {/* Error display */}\n          {(error || audioError) && (\n            <Alert status=\"error\" variant=\"left-accent\" my={2}>\n              <AlertIcon />\n              <Text>{error || audioError}</Text>\n              {(error?.includes('permission') || audioError?.includes('permission')) && (\n                <Button size=\"sm\" ml={2} onClick={() => setShowPermissionHelp(true)}>\n                  Help\n                </Button>\n              )}\n            </Alert>\n          )}\n          \n          <div ref={messagesEndRef} />\n        </VStack>\n      </Box>\n\n      {/* Input area */}\n      <Flex \n        p={4} \n        borderTop=\"1px\" \n        borderColor=\"gray.200\"\n        alignItems=\"center\"\n        backgroundColor=\"white\"\n      >\n        <Input\n          placeholder=\"Type your message...\"\n          value={messageInput}\n          onChange={(e) => setMessageInput(e.target.value)}\n          onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n          mr={2}\n          disabled={loading || isWaitingForCodingChallenge}\n        />\n        \n        <IconButton\n          icon={<FaPaperPlane />}\n          colorScheme=\"blue\"\n          aria-label=\"Send message\"\n          onClick={handleSendMessage}\n          mr={2}\n          isDisabled={loading || !messageInput.trim() || isWaitingForCodingChallenge}\n        />\n        \n        <IconButton\n          icon={isRecording ? <FaStop /> : <FaMicrophone />}\n          colorScheme={isRecording ? \"red\" : \"blue\"}\n          aria-label={isRecording ? \"Stop recording\" : \"Start recording\"}\n          onClick={handleVoiceRecording}\n          isDisabled={(loading && !isRecording) || isWaitingForCodingChallenge || isInitializing}\n          isLoading={isInitializing}\n        />\n        \n        {voiceMode ? (\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            ml={2} \n            onClick={() => setVoiceMode(false)}\n          >\n            Text Mode\n          </Button>\n        ) : (\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            ml={2} \n            onClick={() => setVoiceMode(true)}\n          >\n            Voice Mode\n          </Button>\n        )}\n      </Flex>\n\n      {/* Microphone Permission Help Modal */}\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Microphone Access Required</ModalHeader>\n          <ModalBody>\n            <VStack spacing={4} align=\"stretch\">\n              <Alert status=\"info\">\n                <AlertIcon />\n                <Text>Voice mode requires microphone access to function properly.</Text>\n              </Alert>\n              \n              <Text fontWeight=\"bold\">How to enable microphone access:</Text>\n              \n              <VStack align=\"start\" spacing={2} pl={4}>\n                <Text>1. Look for the microphone icon in your browser's address bar</Text>\n                <Text>2. Click on it and select \"Allow\"</Text>\n                <Text>3. If not visible, go to your browser settings</Text>\n                <Text>4. Find \"Site Settings\" or \"Privacy & Security\"</Text>\n                <Text>5. Locate \"Microphone\" permissions and allow for this site</Text>\n              </VStack>\n              \n              <Alert status=\"warning\">\n                <AlertIcon as={FaExclamationTriangle} />\n                <Text>After enabling permissions, you may need to refresh the page.</Text>\n              </Alert>\n              \n              <Divider />\n              \n              <Box>\n                <Text fontWeight=\"bold\" mb={2}>Still having issues?</Text>\n                <Button \n                  as={Link} \n                  to=\"/microphone-test\" \n                  colorScheme=\"teal\" \n                  size=\"sm\" \n                  width=\"full\"\n                  onClick={onClose}\n                >\n                  Open Microphone Troubleshooter\n                </Button>\n                <Text fontSize=\"sm\" mt={2}>\n                  The troubleshooter will help diagnose and fix microphone issues.\n                </Text>\n              </Box>\n            </VStack>\n          </ModalBody>\n          <ModalFooter>\n            <Button colorScheme=\"blue\" mr={3} onClick={handleRetryMicrophoneAccess}>\n              Try Again\n            </Button>\n            <Button variant=\"ghost\" onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Flex>\n  );\n};\n\nexport default ChatInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}