{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{Box}from'@chakra-ui/react';// We're using a simple approach here with a textarea and syntax highlighting\n// In a production app, you'd use a more robust solution like Monaco Editor or CodeMirror\nimport{jsx as _jsx}from\"react/jsx-runtime\";const CodeEditor=_ref=>{let{code,language,onChange}=_ref;const editorRef=useRef(null);// Update the height of the textarea to fit the content\nuseEffect(()=>{if(editorRef.current){editorRef.current.style.height='auto';editorRef.current.style.height=`${editorRef.current.scrollHeight}px`;}},[code]);const handleChange=e=>{onChange(e.target.value);};return/*#__PURE__*/_jsx(Box,{position:\"relative\",height:\"400px\",borderWidth:\"1px\",borderRadius:\"md\",overflow:\"hidden\",children:/*#__PURE__*/_jsx(\"textarea\",{ref:editorRef,value:code,onChange:handleChange,style:{width:'100%',height:'100%',padding:'1rem',fontFamily:'monospace',fontSize:'14px',lineHeight:'1.5',border:'none',resize:'none',outline:'none',backgroundColor:'#f5f5f5'},spellCheck:\"false\",\"data-language\":language})});};export default CodeEditor;","map":{"version":3,"names":["React","useRef","useEffect","Box","jsx","_jsx","CodeEditor","_ref","code","language","onChange","editorRef","current","style","height","scrollHeight","handleChange","e","target","value","position","borderWidth","borderRadius","overflow","children","ref","width","padding","fontFamily","fontSize","lineHeight","border","resize","outline","backgroundColor","spellCheck"],"sources":["/home/glitch/Documents/ai-interviewer/frontend/src/components/CodeEditor.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Box } from '@chakra-ui/react';\n\n// We're using a simple approach here with a textarea and syntax highlighting\n// In a production app, you'd use a more robust solution like Monaco Editor or CodeMirror\nconst CodeEditor = ({ code, language, onChange }) => {\n  const editorRef = useRef(null);\n  \n  // Update the height of the textarea to fit the content\n  useEffect(() => {\n    if (editorRef.current) {\n      editorRef.current.style.height = 'auto';\n      editorRef.current.style.height = `${editorRef.current.scrollHeight}px`;\n    }\n  }, [code]);\n  \n  const handleChange = (e) => {\n    onChange(e.target.value);\n  };\n  \n  return (\n    <Box\n      position=\"relative\"\n      height=\"400px\"\n      borderWidth=\"1px\"\n      borderRadius=\"md\"\n      overflow=\"hidden\"\n    >\n      <textarea\n        ref={editorRef}\n        value={code}\n        onChange={handleChange}\n        style={{\n          width: '100%',\n          height: '100%',\n          padding: '1rem',\n          fontFamily: 'monospace',\n          fontSize: '14px',\n          lineHeight: '1.5',\n          border: 'none',\n          resize: 'none',\n          outline: 'none',\n          backgroundColor: '#f5f5f5',\n        }}\n        spellCheck=\"false\"\n        data-language={language}\n      />\n    </Box>\n  );\n};\n\nexport default CodeEditor; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAChD,OAASC,GAAG,KAAQ,kBAAkB,CAEtC;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAkC,IAAjC,CAAEC,IAAI,CAAEC,QAAQ,CAAEC,QAAS,CAAC,CAAAH,IAAA,CAC9C,KAAM,CAAAI,SAAS,CAAGV,MAAM,CAAC,IAAI,CAAC,CAE9B;AACAC,SAAS,CAAC,IAAM,CACd,GAAIS,SAAS,CAACC,OAAO,CAAE,CACrBD,SAAS,CAACC,OAAO,CAACC,KAAK,CAACC,MAAM,CAAG,MAAM,CACvCH,SAAS,CAACC,OAAO,CAACC,KAAK,CAACC,MAAM,CAAG,GAAGH,SAAS,CAACC,OAAO,CAACG,YAAY,IAAI,CACxE,CACF,CAAC,CAAE,CAACP,IAAI,CAAC,CAAC,CAEV,KAAM,CAAAQ,YAAY,CAAIC,CAAC,EAAK,CAC1BP,QAAQ,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC1B,CAAC,CAED,mBACEd,IAAA,CAACF,GAAG,EACFiB,QAAQ,CAAC,UAAU,CACnBN,MAAM,CAAC,OAAO,CACdO,WAAW,CAAC,KAAK,CACjBC,YAAY,CAAC,IAAI,CACjBC,QAAQ,CAAC,QAAQ,CAAAC,QAAA,cAEjBnB,IAAA,aACEoB,GAAG,CAAEd,SAAU,CACfQ,KAAK,CAAEX,IAAK,CACZE,QAAQ,CAAEM,YAAa,CACvBH,KAAK,CAAE,CACLa,KAAK,CAAE,MAAM,CACbZ,MAAM,CAAE,MAAM,CACda,OAAO,CAAE,MAAM,CACfC,UAAU,CAAE,WAAW,CACvBC,QAAQ,CAAE,MAAM,CAChBC,UAAU,CAAE,KAAK,CACjBC,MAAM,CAAE,MAAM,CACdC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,MAAM,CACfC,eAAe,CAAE,SACnB,CAAE,CACFC,UAAU,CAAC,OAAO,CAClB,gBAAe1B,QAAS,CACzB,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}