{"ast":null,"code":"import React,{createContext,useContext,useReducer,useCallback}from'react';import{v4 as uuidv4}from'uuid';// Create context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const InterviewContext=/*#__PURE__*/createContext();// Define initial state\nconst initialState={userId:`user-${uuidv4()}`,sessionId:null,messages:[],loading:false,error:null,voiceMode:false,interviewStage:'introduction',jobRoleData:null};// Define reducer actions\nconst ACTIONS={SET_USER_ID:'set_user_id',SET_SESSION_ID:'set_session_id',SET_MESSAGES:'set_messages',ADD_MESSAGE:'add_message',SET_LOADING:'set_loading',SET_ERROR:'set_error',SET_VOICE_MODE:'set_voice_mode',SET_INTERVIEW_STAGE:'set_interview_stage',SET_JOB_ROLE_DATA:'set_job_role_data',RESET:'reset'};// Reducer function to handle state updates\nconst reducer=(state,action)=>{switch(action.type){case ACTIONS.SET_USER_ID:return{...state,userId:action.payload};case ACTIONS.SET_SESSION_ID:return{...state,sessionId:action.payload};case ACTIONS.SET_MESSAGES:return{...state,messages:action.payload};case ACTIONS.ADD_MESSAGE:return{...state,messages:[...state.messages,action.payload]};case ACTIONS.SET_LOADING:return{...state,loading:action.payload};case ACTIONS.SET_ERROR:return{...state,error:action.payload};case ACTIONS.SET_VOICE_MODE:return{...state,voiceMode:action.payload};case ACTIONS.SET_INTERVIEW_STAGE:return{...state,interviewStage:action.payload};case ACTIONS.SET_JOB_ROLE_DATA:return{...state,jobRoleData:action.payload};case ACTIONS.RESET:return{...initialState,userId:`user-${uuidv4()}`,// Generate fresh user ID\nmessages:[]// Reset messages\n};default:return state;}};/**\n * Interview Provider component\n * Provides interview state management context\n */export const InterviewProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(reducer,initialState);// Define action dispatchers as callbacks\nconst setUserId=useCallback(userId=>{dispatch({type:ACTIONS.SET_USER_ID,payload:userId});},[]);const setSessionId=useCallback(sessionId=>{dispatch({type:ACTIONS.SET_SESSION_ID,payload:sessionId});},[]);const setMessages=useCallback(messages=>{dispatch({type:ACTIONS.SET_MESSAGES,payload:messages});},[]);const addMessage=useCallback(message=>{dispatch({type:ACTIONS.ADD_MESSAGE,payload:message});},[]);const setLoading=useCallback(loading=>{dispatch({type:ACTIONS.SET_LOADING,payload:loading});},[]);const setError=useCallback(error=>{dispatch({type:ACTIONS.SET_ERROR,payload:error});},[]);const setVoiceMode=useCallback(voiceMode=>{dispatch({type:ACTIONS.SET_VOICE_MODE,payload:voiceMode});},[]);const setInterviewStage=useCallback(stage=>{dispatch({type:ACTIONS.SET_INTERVIEW_STAGE,payload:stage});},[]);const setJobRoleData=useCallback(jobRoleData=>{dispatch({type:ACTIONS.SET_JOB_ROLE_DATA,payload:jobRoleData});},[]);const resetInterview=useCallback(()=>{dispatch({type:ACTIONS.RESET});},[]);// Create context value object with state and action dispatchers\nconst value={...state,setUserId,setSessionId,setMessages,addMessage,setLoading,setError,setVoiceMode,setInterviewStage,setJobRoleData,resetInterview};// Provide context to children\nreturn/*#__PURE__*/_jsx(InterviewContext.Provider,{value:value,children:children});};// Custom hook for accessing interview context\nexport const useInterview=()=>{const context=useContext(InterviewContext);if(context===undefined){throw new Error('useInterview must be used within an InterviewProvider');}return context;};export default InterviewContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useCallback","v4","uuidv4","jsx","_jsx","InterviewContext","initialState","userId","sessionId","messages","loading","error","voiceMode","interviewStage","jobRoleData","ACTIONS","SET_USER_ID","SET_SESSION_ID","SET_MESSAGES","ADD_MESSAGE","SET_LOADING","SET_ERROR","SET_VOICE_MODE","SET_INTERVIEW_STAGE","SET_JOB_ROLE_DATA","RESET","reducer","state","action","type","payload","InterviewProvider","_ref","children","dispatch","setUserId","setSessionId","setMessages","addMessage","message","setLoading","setError","setVoiceMode","setInterviewStage","stage","setJobRoleData","resetInterview","value","Provider","useInterview","context","undefined","Error"],"sources":["/home/glitch/Documents/ai-interviewer/frontend/src/context/InterviewContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n// Create context\nconst InterviewContext = createContext();\n\n// Define initial state\nconst initialState = {\n  userId: `user-${uuidv4()}`,\n  sessionId: null,\n  messages: [],\n  loading: false,\n  error: null,\n  voiceMode: false,\n  interviewStage: 'introduction',\n  jobRoleData: null,\n};\n\n// Define reducer actions\nconst ACTIONS = {\n  SET_USER_ID: 'set_user_id',\n  SET_SESSION_ID: 'set_session_id',\n  SET_MESSAGES: 'set_messages',\n  ADD_MESSAGE: 'add_message',\n  SET_LOADING: 'set_loading',\n  SET_ERROR: 'set_error',\n  SET_VOICE_MODE: 'set_voice_mode',\n  SET_INTERVIEW_STAGE: 'set_interview_stage',\n  SET_JOB_ROLE_DATA: 'set_job_role_data',\n  RESET: 'reset',\n};\n\n// Reducer function to handle state updates\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_USER_ID:\n      return { ...state, userId: action.payload };\n    case ACTIONS.SET_SESSION_ID:\n      return { ...state, sessionId: action.payload };\n    case ACTIONS.SET_MESSAGES:\n      return { ...state, messages: action.payload };\n    case ACTIONS.ADD_MESSAGE:\n      return { ...state, messages: [...state.messages, action.payload] };\n    case ACTIONS.SET_LOADING:\n      return { ...state, loading: action.payload };\n    case ACTIONS.SET_ERROR:\n      return { ...state, error: action.payload };\n    case ACTIONS.SET_VOICE_MODE:\n      return { ...state, voiceMode: action.payload };\n    case ACTIONS.SET_INTERVIEW_STAGE:\n      return { ...state, interviewStage: action.payload };\n    case ACTIONS.SET_JOB_ROLE_DATA:\n      return { ...state, jobRoleData: action.payload };\n    case ACTIONS.RESET:\n      return {\n        ...initialState,\n        userId: `user-${uuidv4()}`, // Generate fresh user ID\n        messages: [], // Reset messages\n      };\n    default:\n      return state;\n  }\n};\n\n/**\n * Interview Provider component\n * Provides interview state management context\n */\nexport const InterviewProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  \n  // Define action dispatchers as callbacks\n  const setUserId = useCallback((userId) => {\n    dispatch({ type: ACTIONS.SET_USER_ID, payload: userId });\n  }, []);\n  \n  const setSessionId = useCallback((sessionId) => {\n    dispatch({ type: ACTIONS.SET_SESSION_ID, payload: sessionId });\n  }, []);\n  \n  const setMessages = useCallback((messages) => {\n    dispatch({ type: ACTIONS.SET_MESSAGES, payload: messages });\n  }, []);\n  \n  const addMessage = useCallback((message) => {\n    dispatch({ type: ACTIONS.ADD_MESSAGE, payload: message });\n  }, []);\n  \n  const setLoading = useCallback((loading) => {\n    dispatch({ type: ACTIONS.SET_LOADING, payload: loading });\n  }, []);\n  \n  const setError = useCallback((error) => {\n    dispatch({ type: ACTIONS.SET_ERROR, payload: error });\n  }, []);\n  \n  const setVoiceMode = useCallback((voiceMode) => {\n    dispatch({ type: ACTIONS.SET_VOICE_MODE, payload: voiceMode });\n  }, []);\n  \n  const setInterviewStage = useCallback((stage) => {\n    dispatch({ type: ACTIONS.SET_INTERVIEW_STAGE, payload: stage });\n  }, []);\n  \n  const setJobRoleData = useCallback((jobRoleData) => {\n    dispatch({ type: ACTIONS.SET_JOB_ROLE_DATA, payload: jobRoleData });\n  }, []);\n  \n  const resetInterview = useCallback(() => {\n    dispatch({ type: ACTIONS.RESET });\n  }, []);\n  \n  // Create context value object with state and action dispatchers\n  const value = {\n    ...state,\n    setUserId,\n    setSessionId,\n    setMessages,\n    addMessage,\n    setLoading,\n    setError,\n    setVoiceMode,\n    setInterviewStage,\n    setJobRoleData,\n    resetInterview,\n  };\n  \n  // Provide context to children\n  return (\n    <InterviewContext.Provider value={value}>\n      {children}\n    </InterviewContext.Provider>\n  );\n};\n\n// Custom hook for accessing interview context\nexport const useInterview = () => {\n  const context = useContext(InterviewContext);\n  \n  if (context === undefined) {\n    throw new Error('useInterview must be used within an InterviewProvider');\n  }\n  \n  return context;\n};\n\nexport default InterviewContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}