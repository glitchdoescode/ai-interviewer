{"ast":null,"code":"import{useState,useEffect,useCallback}from'react';import Recorder from'recorder-js';/**\n * Custom hook for audio recording functionality\n * @returns {Object} Object containing recording state and functions\n */const useAudioRecorder=()=>{const[recorder,setRecorder]=useState(null);const[stream,setStream]=useState(null);const[isRecording,setIsRecording]=useState(false);const[audioData,setAudioData]=useState(null);const[error,setError]=useState(null);// Initialize the recorder when the component mounts\nuseEffect(()=>{// Clean up function for when the component unmounts\nreturn()=>{if(stream){// Stop all audio tracks\nstream.getTracks().forEach(track=>track.stop());}};},[stream]);// Initialize audio recording\nconst initRecording=useCallback(async()=>{try{setError(null);// Request user permission to access the microphone\nconst audioStream=await navigator.mediaDevices.getUserMedia({audio:true});// Create an audio context\nconst audioContext=new(window.AudioContext||window.webkitAudioContext)();// Create a new recorder with the audio context\nconst newRecorder=new Recorder(audioContext,{onAnalysed:data=>{// You can use this callback to visualize the audio data\n// console.log('Audio data:', data);\n}});// Connect the recorder to the stream\nnewRecorder.init(audioStream);// Save the recorder and stream in state\nsetRecorder(newRecorder);setStream(audioStream);return true;}catch(err){console.error('Error initializing audio recording:',err);setError(`Error accessing microphone: ${err.message}`);return false;}},[]);// Start recording\nconst startRecording=useCallback(async()=>{if(!recorder){const initialized=await initRecording();if(!initialized)return false;}try{recorder.start();setIsRecording(true);setAudioData(null);return true;}catch(err){console.error('Error starting recording:',err);setError(`Error starting recording: ${err.message}`);return false;}},[recorder,initRecording]);// Stop recording and get the audio data\nconst stopRecording=useCallback(async()=>{if(!recorder||!isRecording)return null;try{const{blob,buffer}=await recorder.stop();setIsRecording(false);setAudioData({blob,buffer});return{blob,buffer};}catch(err){console.error('Error stopping recording:',err);setError(`Error stopping recording: ${err.message}`);return null;}},[recorder,isRecording]);// Convert audio blob to base64\nconst getAudioBase64=useCallback(async audioBlob=>{return new Promise((resolve,reject)=>{const reader=new FileReader();reader.onloadend=()=>{// Extract the base64 data from the result\n// The result is like \"data:audio/wav;base64,UklGRiXiAABXQVZF...\"\nconst base64Data=reader.result.split(',')[1];resolve(base64Data);};reader.onerror=reject;reader.readAsDataURL(audioBlob);});},[]);// Cancel recording\nconst cancelRecording=useCallback(()=>{if(recorder&&isRecording){recorder.cancel();setIsRecording(false);}setAudioData(null);},[recorder,isRecording]);return{isRecording,audioData,error,initRecording,startRecording,stopRecording,cancelRecording,getAudioBase64};};export default useAudioRecorder;","map":{"version":3,"names":["useState","useEffect","useCallback","Recorder","useAudioRecorder","recorder","setRecorder","stream","setStream","isRecording","setIsRecording","audioData","setAudioData","error","setError","getTracks","forEach","track","stop","initRecording","audioStream","navigator","mediaDevices","getUserMedia","audio","audioContext","window","AudioContext","webkitAudioContext","newRecorder","onAnalysed","data","init","err","console","message","startRecording","initialized","start","stopRecording","blob","buffer","getAudioBase64","audioBlob","Promise","resolve","reject","reader","FileReader","onloadend","base64Data","result","split","onerror","readAsDataURL","cancelRecording","cancel"],"sources":["/home/glitch/Documents/ai-interviewer/frontend/src/hooks/useAudioRecorder.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport Recorder from 'recorder-js';\n\n/**\n * Custom hook for audio recording functionality\n * @returns {Object} Object containing recording state and functions\n */\nconst useAudioRecorder = () => {\n  const [recorder, setRecorder] = useState(null);\n  const [stream, setStream] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioData, setAudioData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Initialize the recorder when the component mounts\n  useEffect(() => {\n    // Clean up function for when the component unmounts\n    return () => {\n      if (stream) {\n        // Stop all audio tracks\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [stream]);\n\n  // Initialize audio recording\n  const initRecording = useCallback(async () => {\n    try {\n      setError(null);\n      // Request user permission to access the microphone\n      const audioStream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      \n      // Create an audio context\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      \n      // Create a new recorder with the audio context\n      const newRecorder = new Recorder(audioContext, {\n        onAnalysed: data => {\n          // You can use this callback to visualize the audio data\n          // console.log('Audio data:', data);\n        },\n      });\n\n      // Connect the recorder to the stream\n      newRecorder.init(audioStream);\n      \n      // Save the recorder and stream in state\n      setRecorder(newRecorder);\n      setStream(audioStream);\n      return true;\n    } catch (err) {\n      console.error('Error initializing audio recording:', err);\n      setError(`Error accessing microphone: ${err.message}`);\n      return false;\n    }\n  }, []);\n\n  // Start recording\n  const startRecording = useCallback(async () => {\n    if (!recorder) {\n      const initialized = await initRecording();\n      if (!initialized) return false;\n    }\n\n    try {\n      recorder.start();\n      setIsRecording(true);\n      setAudioData(null);\n      return true;\n    } catch (err) {\n      console.error('Error starting recording:', err);\n      setError(`Error starting recording: ${err.message}`);\n      return false;\n    }\n  }, [recorder, initRecording]);\n\n  // Stop recording and get the audio data\n  const stopRecording = useCallback(async () => {\n    if (!recorder || !isRecording) return null;\n\n    try {\n      const { blob, buffer } = await recorder.stop();\n      setIsRecording(false);\n      setAudioData({ blob, buffer });\n      return { blob, buffer };\n    } catch (err) {\n      console.error('Error stopping recording:', err);\n      setError(`Error stopping recording: ${err.message}`);\n      return null;\n    }\n  }, [recorder, isRecording]);\n\n  // Convert audio blob to base64\n  const getAudioBase64 = useCallback(async (audioBlob) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        // Extract the base64 data from the result\n        // The result is like \"data:audio/wav;base64,UklGRiXiAABXQVZF...\"\n        const base64Data = reader.result.split(',')[1];\n        resolve(base64Data);\n      };\n      reader.onerror = reject;\n      reader.readAsDataURL(audioBlob);\n    });\n  }, []);\n\n  // Cancel recording\n  const cancelRecording = useCallback(() => {\n    if (recorder && isRecording) {\n      recorder.cancel();\n      setIsRecording(false);\n    }\n    setAudioData(null);\n  }, [recorder, isRecording]);\n\n  return {\n    isRecording,\n    audioData,\n    error,\n    initRecording,\n    startRecording,\n    stopRecording,\n    cancelRecording,\n    getAudioBase64,\n  };\n};\n\nexport default useAudioRecorder; "],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CACxD,MAAO,CAAAC,QAAQ,KAAM,aAAa,CAElC;AACA;AACA;AACA,GACA,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGN,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACO,MAAM,CAAEC,SAAS,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACS,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACW,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAExC;AACAC,SAAS,CAAC,IAAM,CACd;AACA,MAAO,IAAM,CACX,GAAIM,MAAM,CAAE,CACV;AACAA,MAAM,CAACQ,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,EAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CACnD,CACF,CAAC,CACH,CAAC,CAAE,CAACX,MAAM,CAAC,CAAC,CAEZ;AACA,KAAM,CAAAY,aAAa,CAAGjB,WAAW,CAAC,SAAY,CAC5C,GAAI,CACFY,QAAQ,CAAC,IAAI,CAAC,CACd;AACA,KAAM,CAAAM,WAAW,CAAG,KAAM,CAAAC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAE9E;AACA,KAAM,CAAAC,YAAY,CAAG,IAAKC,MAAM,CAACC,YAAY,EAAID,MAAM,CAACE,kBAAkB,EAAE,CAAC,CAE7E;AACA,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAA1B,QAAQ,CAACsB,YAAY,CAAE,CAC7CK,UAAU,CAAEC,IAAI,EAAI,CAClB;AACA;AAAA,CAEJ,CAAC,CAAC,CAEF;AACAF,WAAW,CAACG,IAAI,CAACZ,WAAW,CAAC,CAE7B;AACAd,WAAW,CAACuB,WAAW,CAAC,CACxBrB,SAAS,CAACY,WAAW,CAAC,CACtB,MAAO,KAAI,CACb,CAAE,MAAOa,GAAG,CAAE,CACZC,OAAO,CAACrB,KAAK,CAAC,qCAAqC,CAAEoB,GAAG,CAAC,CACzDnB,QAAQ,CAAC,+BAA+BmB,GAAG,CAACE,OAAO,EAAE,CAAC,CACtD,MAAO,MAAK,CACd,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAC,cAAc,CAAGlC,WAAW,CAAC,SAAY,CAC7C,GAAI,CAACG,QAAQ,CAAE,CACb,KAAM,CAAAgC,WAAW,CAAG,KAAM,CAAAlB,aAAa,CAAC,CAAC,CACzC,GAAI,CAACkB,WAAW,CAAE,MAAO,MAAK,CAChC,CAEA,GAAI,CACFhC,QAAQ,CAACiC,KAAK,CAAC,CAAC,CAChB5B,cAAc,CAAC,IAAI,CAAC,CACpBE,YAAY,CAAC,IAAI,CAAC,CAClB,MAAO,KAAI,CACb,CAAE,MAAOqB,GAAG,CAAE,CACZC,OAAO,CAACrB,KAAK,CAAC,2BAA2B,CAAEoB,GAAG,CAAC,CAC/CnB,QAAQ,CAAC,6BAA6BmB,GAAG,CAACE,OAAO,EAAE,CAAC,CACpD,MAAO,MAAK,CACd,CACF,CAAC,CAAE,CAAC9B,QAAQ,CAAEc,aAAa,CAAC,CAAC,CAE7B;AACA,KAAM,CAAAoB,aAAa,CAAGrC,WAAW,CAAC,SAAY,CAC5C,GAAI,CAACG,QAAQ,EAAI,CAACI,WAAW,CAAE,MAAO,KAAI,CAE1C,GAAI,CACF,KAAM,CAAE+B,IAAI,CAAEC,MAAO,CAAC,CAAG,KAAM,CAAApC,QAAQ,CAACa,IAAI,CAAC,CAAC,CAC9CR,cAAc,CAAC,KAAK,CAAC,CACrBE,YAAY,CAAC,CAAE4B,IAAI,CAAEC,MAAO,CAAC,CAAC,CAC9B,MAAO,CAAED,IAAI,CAAEC,MAAO,CAAC,CACzB,CAAE,MAAOR,GAAG,CAAE,CACZC,OAAO,CAACrB,KAAK,CAAC,2BAA2B,CAAEoB,GAAG,CAAC,CAC/CnB,QAAQ,CAAC,6BAA6BmB,GAAG,CAACE,OAAO,EAAE,CAAC,CACpD,MAAO,KAAI,CACb,CACF,CAAC,CAAE,CAAC9B,QAAQ,CAAEI,WAAW,CAAC,CAAC,CAE3B;AACA,KAAM,CAAAiC,cAAc,CAAGxC,WAAW,CAAC,KAAO,CAAAyC,SAAS,EAAK,CACtD,MAAO,IAAI,CAAAC,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACtC,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,UAAU,CAAC,CAAC,CAC/BD,MAAM,CAACE,SAAS,CAAG,IAAM,CACvB;AACA;AACA,KAAM,CAAAC,UAAU,CAAGH,MAAM,CAACI,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC9CP,OAAO,CAACK,UAAU,CAAC,CACrB,CAAC,CACDH,MAAM,CAACM,OAAO,CAAGP,MAAM,CACvBC,MAAM,CAACO,aAAa,CAACX,SAAS,CAAC,CACjC,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAY,eAAe,CAAGrD,WAAW,CAAC,IAAM,CACxC,GAAIG,QAAQ,EAAII,WAAW,CAAE,CAC3BJ,QAAQ,CAACmD,MAAM,CAAC,CAAC,CACjB9C,cAAc,CAAC,KAAK,CAAC,CACvB,CACAE,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAAE,CAACP,QAAQ,CAAEI,WAAW,CAAC,CAAC,CAE3B,MAAO,CACLA,WAAW,CACXE,SAAS,CACTE,KAAK,CACLM,aAAa,CACbiB,cAAc,CACdG,aAAa,CACbgB,eAAe,CACfb,cACF,CAAC,CACH,CAAC,CAED,cAAe,CAAAtC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}