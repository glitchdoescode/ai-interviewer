{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Heading,Select,Text,Tag,TagLabel,Wrap,WrapItem,FormControl,FormLabel,Button,useToast,Textarea,Skeleton}from'@chakra-ui/react';import{getJobRoles}from'../api/interviewService';/**\n * Component for selecting a job role before starting an interview\n * \n * @param {Object} props Component props\n * @param {Function} props.onRoleSelect Callback when a role is selected, passing job role data\n * @param {Function} props.onStartInterview Callback to start the interview with selected role\n * @param {boolean} props.isLoading Whether the component is in loading state\n */import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const JobRoleSelector=_ref=>{let{onRoleSelect,onStartInterview,isLoading=false}=_ref;const[jobRoles,setJobRoles]=useState([]);const[selectedRole,setSelectedRole]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[customDescription,setCustomDescription]=useState('');const toast=useToast();// Fetch available job roles on component mount\nuseEffect(()=>{const fetchJobRoles=async()=>{try{setLoading(true);const roles=await getJobRoles();setJobRoles(roles);setLoading(false);}catch(err){setError('Failed to load job roles. Please try again later.');setLoading(false);toast({title:'Error',description:'Failed to load job roles',status:'error',duration:5000,isClosable:true});}};fetchJobRoles();},[toast]);// Handle role selection\nconst handleRoleChange=e=>{const roleId=e.target.value;if(roleId==='custom'){setSelectedRole({role_name:'Custom Role',seniority_level:'Mid-level',required_skills:[],description:''});}else{const selected=jobRoles.find(role=>role.role_name===roleId);setSelectedRole(selected);setCustomDescription('');// Call the onRoleSelect callback\nif(onRoleSelect&&selected){onRoleSelect(selected);}}};// Handle custom description change\nconst handleDescriptionChange=e=>{setCustomDescription(e.target.value);// Update selected role with custom description\nif(selectedRole){const updatedRole={...selectedRole,description:e.target.value};setSelectedRole(updatedRole);// Call the onRoleSelect callback\nif(onRoleSelect){onRoleSelect(updatedRole);}}};// Handle starting the interview\nconst handleStartInterview=()=>{if(!selectedRole){toast({title:'No role selected',description:'Please select a job role before starting the interview',status:'warning',duration:3000,isClosable:true});return;}if(onStartInterview){onStartInterview(selectedRole);}};return/*#__PURE__*/_jsxs(Box,{borderWidth:\"1px\",borderRadius:\"lg\",p:6,boxShadow:\"md\",bg:\"white\",maxWidth:\"800px\",mx:\"auto\",children:[/*#__PURE__*/_jsx(Heading,{as:\"h2\",size:\"lg\",mb:4,children:\"Select Job Role for Interview\"}),/*#__PURE__*/_jsx(Text,{mb:4,color:\"gray.600\",children:\"Choose a job role to customize the interview questions and evaluation criteria. This helps the AI interviewer focus on relevant skills and experience.\"}),loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Skeleton,{height:\"40px\",mb:4}),/*#__PURE__*/_jsx(Skeleton,{height:\"120px\",mb:4}),/*#__PURE__*/_jsx(Skeleton,{height:\"60px\"})]}):error?/*#__PURE__*/_jsx(Text,{color:\"red.500\",children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(FormControl,{mb:6,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Job Role\"}),/*#__PURE__*/_jsxs(Select,{placeholder:\"Select job role\",onChange:handleRoleChange,isDisabled:isLoading,children:[jobRoles.map(role=>/*#__PURE__*/_jsxs(\"option\",{value:role.role_name,children:[role.role_name,\" (\",role.seniority_level,\")\"]},role.role_name)),/*#__PURE__*/_jsx(\"option\",{value:\"custom\",children:\"Custom Role\"})]})]}),selectedRole&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Box,{mb:6,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Required Skills\"}),/*#__PURE__*/_jsx(Wrap,{spacing:2,children:selectedRole.required_skills.map(skill=>/*#__PURE__*/_jsx(WrapItem,{children:/*#__PURE__*/_jsx(Tag,{size:\"md\",colorScheme:\"blue\",borderRadius:\"full\",children:/*#__PURE__*/_jsx(TagLabel,{children:skill})})},skill))})]}),/*#__PURE__*/_jsxs(FormControl,{mb:6,children:[/*#__PURE__*/_jsx(FormLabel,{children:selectedRole.role_name==='Custom Role'?'Job Description (required)':'Job Description (optional override)'}),/*#__PURE__*/_jsx(Textarea,{value:customDescription||selectedRole.description,onChange:handleDescriptionChange,placeholder:\"Enter job description or specific requirements\",size:\"md\",rows:4,isDisabled:isLoading})]})]}),/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",size:\"lg\",width:\"full\",mt:4,onClick:handleStartInterview,isLoading:isLoading,isDisabled:!selectedRole,children:\"Start Interview\"})]})]});};export default JobRoleSelector;","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Select","Text","Tag","TagLabel","Wrap","WrapItem","FormControl","FormLabel","Button","useToast","Textarea","Skeleton","getJobRoles","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","JobRoleSelector","_ref","onRoleSelect","onStartInterview","isLoading","jobRoles","setJobRoles","selectedRole","setSelectedRole","loading","setLoading","error","setError","customDescription","setCustomDescription","toast","fetchJobRoles","roles","err","title","description","status","duration","isClosable","handleRoleChange","e","roleId","target","value","role_name","seniority_level","required_skills","selected","find","role","handleDescriptionChange","updatedRole","handleStartInterview","borderWidth","borderRadius","p","boxShadow","bg","maxWidth","mx","children","as","size","mb","color","height","placeholder","onChange","isDisabled","map","spacing","skill","colorScheme","rows","width","mt","onClick"],"sources":["/home/glitch/Documents/ai-interviewer/frontend/src/components/JobRoleSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Heading,\n  Select,\n  Text,\n  Tag,\n  TagLabel,\n  Wrap,\n  WrapItem,\n  FormControl,\n  FormLabel,\n  Button,\n  useToast,\n  Textarea,\n  Skeleton,\n} from '@chakra-ui/react';\nimport { getJobRoles } from '../api/interviewService';\n\n/**\n * Component for selecting a job role before starting an interview\n * \n * @param {Object} props Component props\n * @param {Function} props.onRoleSelect Callback when a role is selected, passing job role data\n * @param {Function} props.onStartInterview Callback to start the interview with selected role\n * @param {boolean} props.isLoading Whether the component is in loading state\n */\nconst JobRoleSelector = ({ onRoleSelect, onStartInterview, isLoading = false }) => {\n  const [jobRoles, setJobRoles] = useState([]);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [customDescription, setCustomDescription] = useState('');\n  \n  const toast = useToast();\n\n  // Fetch available job roles on component mount\n  useEffect(() => {\n    const fetchJobRoles = async () => {\n      try {\n        setLoading(true);\n        const roles = await getJobRoles();\n        setJobRoles(roles);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load job roles. Please try again later.');\n        setLoading(false);\n        toast({\n          title: 'Error',\n          description: 'Failed to load job roles',\n          status: 'error',\n          duration: 5000,\n          isClosable: true,\n        });\n      }\n    };\n\n    fetchJobRoles();\n  }, [toast]);\n\n  // Handle role selection\n  const handleRoleChange = (e) => {\n    const roleId = e.target.value;\n    if (roleId === 'custom') {\n      setSelectedRole({\n        role_name: 'Custom Role',\n        seniority_level: 'Mid-level',\n        required_skills: [],\n        description: ''\n      });\n    } else {\n      const selected = jobRoles.find(role => role.role_name === roleId);\n      setSelectedRole(selected);\n      setCustomDescription('');\n      \n      // Call the onRoleSelect callback\n      if (onRoleSelect && selected) {\n        onRoleSelect(selected);\n      }\n    }\n  };\n\n  // Handle custom description change\n  const handleDescriptionChange = (e) => {\n    setCustomDescription(e.target.value);\n    \n    // Update selected role with custom description\n    if (selectedRole) {\n      const updatedRole = {\n        ...selectedRole,\n        description: e.target.value\n      };\n      setSelectedRole(updatedRole);\n      \n      // Call the onRoleSelect callback\n      if (onRoleSelect) {\n        onRoleSelect(updatedRole);\n      }\n    }\n  };\n\n  // Handle starting the interview\n  const handleStartInterview = () => {\n    if (!selectedRole) {\n      toast({\n        title: 'No role selected',\n        description: 'Please select a job role before starting the interview',\n        status: 'warning',\n        duration: 3000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    if (onStartInterview) {\n      onStartInterview(selectedRole);\n    }\n  };\n\n  return (\n    <Box \n      borderWidth=\"1px\" \n      borderRadius=\"lg\" \n      p={6}\n      boxShadow=\"md\"\n      bg=\"white\"\n      maxWidth=\"800px\"\n      mx=\"auto\"\n    >\n      <Heading as=\"h2\" size=\"lg\" mb={4}>\n        Select Job Role for Interview\n      </Heading>\n      \n      <Text mb={4} color=\"gray.600\">\n        Choose a job role to customize the interview questions and evaluation criteria. \n        This helps the AI interviewer focus on relevant skills and experience.\n      </Text>\n      \n      {loading ? (\n        <>\n          <Skeleton height=\"40px\" mb={4} />\n          <Skeleton height=\"120px\" mb={4} />\n          <Skeleton height=\"60px\" />\n        </>\n      ) : error ? (\n        <Text color=\"red.500\">{error}</Text>\n      ) : (\n        <>\n          <FormControl mb={6}>\n            <FormLabel>Job Role</FormLabel>\n            <Select \n              placeholder=\"Select job role\" \n              onChange={handleRoleChange}\n              isDisabled={isLoading}\n            >\n              {jobRoles.map((role) => (\n                <option key={role.role_name} value={role.role_name}>\n                  {role.role_name} ({role.seniority_level})\n                </option>\n              ))}\n              <option value=\"custom\">Custom Role</option>\n            </Select>\n          </FormControl>\n          \n          {selectedRole && (\n            <>\n              <Box mb={6}>\n                <FormLabel>Required Skills</FormLabel>\n                <Wrap spacing={2}>\n                  {selectedRole.required_skills.map((skill) => (\n                    <WrapItem key={skill}>\n                      <Tag size=\"md\" colorScheme=\"blue\" borderRadius=\"full\">\n                        <TagLabel>{skill}</TagLabel>\n                      </Tag>\n                    </WrapItem>\n                  ))}\n                </Wrap>\n              </Box>\n              \n              <FormControl mb={6}>\n                <FormLabel>\n                  {selectedRole.role_name === 'Custom Role' \n                    ? 'Job Description (required)' \n                    : 'Job Description (optional override)'}\n                </FormLabel>\n                <Textarea\n                  value={customDescription || selectedRole.description}\n                  onChange={handleDescriptionChange}\n                  placeholder=\"Enter job description or specific requirements\"\n                  size=\"md\"\n                  rows={4}\n                  isDisabled={isLoading}\n                />\n              </FormControl>\n            </>\n          )}\n          \n          <Button\n            colorScheme=\"blue\"\n            size=\"lg\"\n            width=\"full\"\n            mt={4}\n            onClick={handleStartInterview}\n            isLoading={isLoading}\n            isDisabled={!selectedRole}\n          >\n            Start Interview\n          </Button>\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default JobRoleSelector; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}