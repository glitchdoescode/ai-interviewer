{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{Box,Flex,Input,IconButton,VStack,Text,Button,Spinner,Alert,AlertIcon,useToast}from'@chakra-ui/react';import{FaPaperPlane,FaMicrophone,FaStop}from'react-icons/fa';import ChatMessage from'./ChatMessage';import{useInterview}from'../context/InterviewContext';import useAudioRecorder from'../hooks/useAudioRecorder';import{startInterview,continueInterview,transcribeAndRespond}from'../api/interviewService';/**\n * Chat interface component for interview interactions\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatInterface=()=>{const{userId,sessionId,messages,loading,error,voiceMode,setUserId,setSessionId,addMessage,setLoading,setError,setVoiceMode}=useInterview();const[messageInput,setMessageInput]=useState('');const messagesEndRef=useRef(null);const toast=useToast();// Audio recording functionality\nconst{isRecording,error:audioError,startRecording,stopRecording,getAudioBase64}=useAudioRecorder();// Scroll to bottom when messages change\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});},[messages]);// Show toast for audio errors\nuseEffect(()=>{if(audioError){toast({title:'Audio Error',description:audioError,status:'error',duration:5000,isClosable:true});}},[audioError,toast]);// Handle sending a text message\nconst handleSendMessage=async()=>{if(!messageInput.trim())return;try{setLoading(true);// Add user message to UI immediately\naddMessage({sender:'user',message:messageInput});// Clear input\nsetMessageInput('');let response;// Either start a new interview or continue an existing one\nif(!sessionId){response=await startInterview(messageInput,userId);setSessionId(response.session_id);if(!userId){// If we didn't have a userId, the API generated one for us\nsetUserId(response.user_id||'anonymous');}}else{response=await continueInterview(sessionId,messageInput,userId);}// Add AI's response to the chat\naddMessage({sender:'ai',message:response.response});}catch(err){setError(err.message||'Error sending message');toast({title:'Error',description:err.message||'Error sending message',status:'error',duration:5000,isClosable:true});}finally{setLoading(false);}};// Handle voice recording toggle\nconst handleVoiceRecording=async()=>{if(isRecording){setLoading(true);// Stop recording\nconst audio=await stopRecording();if(audio&&audio.blob){try{// Convert audio to base64\nconst base64Audio=await getAudioBase64(audio.blob);// Send audio to transcribe and get response\nconst response=await transcribeAndRespond(base64Audio,userId,sessionId);// Add transcription as user message\naddMessage({sender:'user',message:response.transcription});// Add AI response\naddMessage({sender:'ai',message:response.response});// Update session info\nsetSessionId(response.session_id);// Play audio response if available\nif(response.audio_response_url){const audio=new Audio(response.audio_response_url);audio.play();}}catch(err){setError(err.message||'Error processing voice');toast({title:'Error',description:err.message||'Error processing voice',status:'error',duration:5000,isClosable:true});}finally{setLoading(false);}}else{setLoading(false);}}else{// Start recording\nconst success=await startRecording();if(!success){toast({title:'Recording Error',description:'Could not start recording. Please check microphone permissions.',status:'error',duration:5000,isClosable:true});}}};// Handle keyboard shortcuts (Enter to send message)\nconst handleKeyDown=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSendMessage();}};return/*#__PURE__*/_jsxs(Box,{height:\"100%\",display:\"flex\",flexDirection:\"column\",bg:\"white\",borderRadius:\"md\",boxShadow:\"md\",p:4,children:[/*#__PURE__*/_jsx(\"div\",{id:\"recorder-instance\",style:{display:'none'}}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",p:2,mb:4,borderBottom:\"1px\",borderColor:\"gray.200\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",fontWeight:\"bold\",children:\"Technical Interview\"}),/*#__PURE__*/_jsx(Button,{size:\"sm\",colorScheme:voiceMode?'brand':'gray',leftIcon:/*#__PURE__*/_jsx(FaMicrophone,{}),onClick:()=>setVoiceMode(!voiceMode),children:voiceMode?'Voice Mode':'Text Mode'})]}),/*#__PURE__*/_jsxs(VStack,{flex:\"1\",overflowY:\"auto\",spacing:4,p:2,mb:4,align:\"stretch\",children:[messages.length===0?/*#__PURE__*/_jsx(Box,{textAlign:\"center\",color:\"gray.500\",mt:10,children:/*#__PURE__*/_jsx(Text,{children:\"Start your technical interview by saying hello!\"})}):messages.map((msg,idx)=>/*#__PURE__*/_jsx(ChatMessage,{message:msg.message,sender:msg.sender,isLoading:loading&&idx===messages.length-1&&msg.sender==='ai'},idx)),loading&&messages.length===0&&/*#__PURE__*/_jsxs(Flex,{justify:\"center\",align:\"center\",my:6,children:[/*#__PURE__*/_jsx(Spinner,{color:\"brand.500\",mr:3}),/*#__PURE__*/_jsx(Text,{children:\"Starting interview...\"})]}),error&&/*#__PURE__*/_jsxs(Alert,{status:\"error\",borderRadius:\"md\",children:[/*#__PURE__*/_jsx(AlertIcon,{}),error]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(Box,{mt:\"auto\",children:voiceMode?/*#__PURE__*/_jsx(Button,{width:\"100%\",height:\"50px\",colorScheme:isRecording?'red':'brand',leftIcon:isRecording?/*#__PURE__*/_jsx(FaStop,{}):/*#__PURE__*/_jsx(FaMicrophone,{}),isLoading:loading,onClick:handleVoiceRecording,children:isRecording?'Stop Recording':'Start Recording'}):/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Input,{flex:\"1\",placeholder:\"Type your message...\",value:messageInput,onChange:e=>setMessageInput(e.target.value),onKeyDown:handleKeyDown,disabled:loading,mr:2}),/*#__PURE__*/_jsx(IconButton,{colorScheme:\"brand\",\"aria-label\":\"Send message\",icon:/*#__PURE__*/_jsx(FaPaperPlane,{}),isLoading:loading,onClick:handleSendMessage})]})})]});};export default ChatInterface;","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Flex","Input","IconButton","VStack","Text","Button","Spinner","Alert","AlertIcon","useToast","FaPaperPlane","FaMicrophone","FaStop","ChatMessage","useInterview","useAudioRecorder","startInterview","continueInterview","transcribeAndRespond","jsx","_jsx","jsxs","_jsxs","ChatInterface","userId","sessionId","messages","loading","error","voiceMode","setUserId","setSessionId","addMessage","setLoading","setError","setVoiceMode","messageInput","setMessageInput","messagesEndRef","toast","isRecording","audioError","startRecording","stopRecording","getAudioBase64","_messagesEndRef$curre","current","scrollIntoView","behavior","title","description","status","duration","isClosable","handleSendMessage","trim","sender","message","response","session_id","user_id","err","handleVoiceRecording","audio","blob","base64Audio","transcription","audio_response_url","Audio","play","success","handleKeyDown","e","key","shiftKey","preventDefault","height","display","flexDirection","bg","borderRadius","boxShadow","p","children","id","style","alignItems","justifyContent","mb","borderBottom","borderColor","fontSize","fontWeight","size","colorScheme","leftIcon","onClick","flex","overflowY","spacing","align","length","textAlign","color","mt","map","msg","idx","isLoading","justify","my","mr","ref","width","placeholder","value","onChange","target","onKeyDown","disabled","icon"],"sources":["/home/glitch/Documents/ai-interviewer/frontend/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {\n  Box,\n  Flex,\n  Input,\n  IconButton,\n  VStack,\n  Text,\n  Button,\n  Spinner,\n  Alert,\n  AlertIcon,\n  useToast,\n} from '@chakra-ui/react';\nimport { FaPaperPlane, FaMicrophone, FaStop } from 'react-icons/fa';\nimport ChatMessage from './ChatMessage';\nimport { useInterview } from '../context/InterviewContext';\nimport useAudioRecorder from '../hooks/useAudioRecorder';\nimport { startInterview, continueInterview, transcribeAndRespond } from '../api/interviewService';\n\n\n/**\n * Chat interface component for interview interactions\n */\nconst ChatInterface = () => {\n  const {\n    userId,\n    sessionId,\n    messages,\n    loading,\n    error,\n    voiceMode,\n    setUserId,\n    setSessionId,\n    addMessage,\n    setLoading,\n    setError,\n    setVoiceMode,\n  } = useInterview();\n\n  const [messageInput, setMessageInput] = useState('');\n  const messagesEndRef = useRef(null);\n  const toast = useToast();\n\n  // Audio recording functionality\n  const {\n    isRecording,\n    error: audioError,\n    startRecording,\n    stopRecording,\n    getAudioBase64,\n  } = useAudioRecorder();\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Show toast for audio errors\n  useEffect(() => {\n    if (audioError) {\n      toast({\n        title: 'Audio Error',\n        description: audioError,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  }, [audioError, toast]);\n\n  // Handle sending a text message\n  const handleSendMessage = async () => {\n    if (!messageInput.trim()) return;\n    \n    try {\n      setLoading(true);\n      \n      // Add user message to UI immediately\n      addMessage({ sender: 'user', message: messageInput });\n      \n      // Clear input\n      setMessageInput('');\n      \n      let response;\n      \n      // Either start a new interview or continue an existing one\n      if (!sessionId) {\n        response = await startInterview(messageInput, userId);\n        setSessionId(response.session_id);\n        if (!userId) {\n          // If we didn't have a userId, the API generated one for us\n          setUserId(response.user_id || 'anonymous');\n        }\n      } else {\n        response = await continueInterview(sessionId, messageInput, userId);\n      }\n      \n      // Add AI's response to the chat\n      addMessage({ sender: 'ai', message: response.response });\n      \n    } catch (err) {\n      setError(err.message || 'Error sending message');\n      toast({\n        title: 'Error',\n        description: err.message || 'Error sending message',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle voice recording toggle\n  const handleVoiceRecording = async () => {\n    if (isRecording) {\n      setLoading(true);\n      \n      // Stop recording\n      const audio = await stopRecording();\n      \n      if (audio && audio.blob) {\n        try {\n          // Convert audio to base64\n          const base64Audio = await getAudioBase64(audio.blob);\n          \n          // Send audio to transcribe and get response\n          const response = await transcribeAndRespond(base64Audio, userId, sessionId);\n          \n          // Add transcription as user message\n          addMessage({ sender: 'user', message: response.transcription });\n          \n          // Add AI response\n          addMessage({ sender: 'ai', message: response.response });\n          \n          // Update session info\n          setSessionId(response.session_id);\n          \n          // Play audio response if available\n          if (response.audio_response_url) {\n            const audio = new Audio(response.audio_response_url);\n            audio.play();\n          }\n        } catch (err) {\n          setError(err.message || 'Error processing voice');\n          toast({\n            title: 'Error',\n            description: err.message || 'Error processing voice',\n            status: 'error',\n            duration: 5000,\n            isClosable: true,\n          });\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        setLoading(false);\n      }\n    } else {\n      // Start recording\n      const success = await startRecording();\n      if (!success) {\n        toast({\n          title: 'Recording Error',\n          description: 'Could not start recording. Please check microphone permissions.',\n          status: 'error',\n          duration: 5000,\n          isClosable: true,\n        });\n      }\n    }\n  };\n\n  // Handle keyboard shortcuts (Enter to send message)\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      bg=\"white\"\n      borderRadius=\"md\"\n      boxShadow=\"md\"\n      p={4}\n    >\n      {/* Hidden div for audio recorder reference */}\n      <div id=\"recorder-instance\" style={{ display: 'none' }}></div>\n      \n      {/* Chat Header */}\n      <Flex\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        p={2}\n        mb={4}\n        borderBottom=\"1px\"\n        borderColor=\"gray.200\"\n      >\n        <Text fontSize=\"lg\" fontWeight=\"bold\">\n          Technical Interview\n        </Text>\n        \n        <Button\n          size=\"sm\"\n          colorScheme={voiceMode ? 'brand' : 'gray'}\n          leftIcon={<FaMicrophone />}\n          onClick={() => setVoiceMode(!voiceMode)}\n        >\n          {voiceMode ? 'Voice Mode' : 'Text Mode'}\n        </Button>\n      </Flex>\n\n      {/* Messages Container */}\n      <VStack\n        flex=\"1\"\n        overflowY=\"auto\"\n        spacing={4}\n        p={2}\n        mb={4}\n        align=\"stretch\"\n      >\n        {messages.length === 0 ? (\n          <Box textAlign=\"center\" color=\"gray.500\" mt={10}>\n            <Text>Start your technical interview by saying hello!</Text>\n          </Box>\n        ) : (\n          messages.map((msg, idx) => (\n            <ChatMessage\n              key={idx}\n              message={msg.message}\n              sender={msg.sender}\n              isLoading={loading && idx === messages.length - 1 && msg.sender === 'ai'}\n            />\n          ))\n        )}\n        \n        {/* Loading message if no messages displayed yet */}\n        {loading && messages.length === 0 && (\n          <Flex justify=\"center\" align=\"center\" my={6}>\n            <Spinner color=\"brand.500\" mr={3} />\n            <Text>Starting interview...</Text>\n          </Flex>\n        )}\n        \n        {/* Error alert */}\n        {error && (\n          <Alert status=\"error\" borderRadius=\"md\">\n            <AlertIcon />\n            {error}\n          </Alert>\n        )}\n        \n        {/* Invisible element for auto-scrolling */}\n        <div ref={messagesEndRef} />\n      </VStack>\n\n      {/* Message Input */}\n      <Box mt=\"auto\">\n        {voiceMode ? (\n          <Button\n            width=\"100%\"\n            height=\"50px\"\n            colorScheme={isRecording ? 'red' : 'brand'}\n            leftIcon={isRecording ? <FaStop /> : <FaMicrophone />}\n            isLoading={loading}\n            onClick={handleVoiceRecording}\n          >\n            {isRecording ? 'Stop Recording' : 'Start Recording'}\n          </Button>\n        ) : (\n          <Flex>\n            <Input\n              flex=\"1\"\n              placeholder=\"Type your message...\"\n              value={messageInput}\n              onChange={(e) => setMessageInput(e.target.value)}\n              onKeyDown={handleKeyDown}\n              disabled={loading}\n              mr={2}\n            />\n            <IconButton\n              colorScheme=\"brand\"\n              aria-label=\"Send message\"\n              icon={<FaPaperPlane />}\n              isLoading={loading}\n              onClick={handleSendMessage}\n            />\n          </Flex>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ChatInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}